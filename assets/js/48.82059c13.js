(window.webpackJsonp=window.webpackJsonp||[]).push([[48],{445:function(t,s,a){t.exports=a.p+"assets/img/gitupload.925fa36b.png"},643:function(t,s,a){"use strict";a.r(s);var n=a(10),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"三、基础操作流程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#三、基础操作流程"}},[t._v("#")]),t._v(" 三、基础操作流程")]),t._v(" "),s("p",[s("img",{attrs:{src:a(445),alt:""}})]),t._v(" "),s("h2",{attrs:{id:"上传远程仓库-remote"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#上传远程仓库-remote"}},[t._v("#")]),t._v(" 上传远程仓库（remote）")]),t._v(" "),s("p",[t._v("目前我对于 git 所有操作都是在本地进行的。在开发中显然不能这样的，这时我们就需要一个远程的 git 仓库。")]),t._v(" "),s("p",[t._v("远程的 git 仓库和本地的本质没有什么区别，不同点在于远程的仓库可以被多人同时访问使用，方便我们协同开发。")]),t._v(" "),s("p",[t._v("在实际工作中，git 的服务器通常由公司搭建内部使用或是购买一些公共的私有 git 服务器。")]),t._v(" "),s("p",[t._v("我们学习阶段，直接使用一些开放的公共 git 仓库。目前我们常用的库有两个：GitHub 和 Gitee（码云）")]),t._v(" "),s("h3",{attrs:{id:"将本地库上传-github"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#将本地库上传-github"}},[t._v("#")]),t._v(" 将本地库上传 GitHub")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" init "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 1.初始化本地项目 git 仓库 （在我们的项目文件夹下执行）")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 2.跟踪新文件，将内容从工作目录添加到暂存区（注意点号与其前面的 add 间有空格）")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-m")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'当次提交的描述'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 3.提交项目到本地仓库")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" origin git@github.com:chenglun17/git-demo.git "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 4.关联github仓库")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" pull "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--rebase")]),t._v(" origin master "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 5.远端代码与本地代码的冲突合并（远端代码可能有本地代码没有的文件，故需要我们去合并）")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push --set-upstream origin master "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 6.将代码上传github，本地分支main")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-u")]),t._v(" origin master "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#上一条命令的简写方式（由于新建的远程仓库是空的，所以要加上-u这个参数）")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push origin master "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 等远程仓库里面有了内容之后，下次再从本地库上传内容的时候就不用加-u了")]),t._v("\n")])])]),s("h3",{attrs:{id:"将本地库上传-gitee"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#将本地库上传-gitee"}},[t._v("#")]),t._v(" 将本地库上传 Gitee")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" init "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 1.初始化本地项目 git 仓库 （在我们的项目文件夹下执行）")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 2.跟踪新文件，将内容从工作目录添加到暂存区（注意点号与其前面的 add 间有空格）")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-m")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'当次提交的描述'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 3.提交项目到本地仓库")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" origin git@gitee.com:chenglun17/git-demo.git "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 4.将本地仓库与远端仓库建立链接")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" pull "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--rebase")]),t._v(" origin master "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 5.远端代码与本地代码的冲突合并（远端代码可能有本地代码没有的文件，故需要我们去合并）")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-u")]),t._v(" origin master "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 6.提交")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-u")]),t._v(" origin master "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-f")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# -f 强制提交 （这种提交方式对远程协作的情况不合适）")]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);