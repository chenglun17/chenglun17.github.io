(window.webpackJsonp=window.webpackJsonp||[]).push([[149],{680:function(t,s,a){"use strict";a.r(s);var e=a(10),n=Object(e.a)({},(function(){var t=this._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[t("h1",{attrs:{id:"五、axios的难点问题"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#五、axios的难点问题"}},[this._v("#")]),this._v(" 五、axios的难点问题")]),this._v(" "),t("h2",{attrs:{id:"axios文件目录结构"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#axios文件目录结构"}},[this._v("#")]),this._v(" axios文件目录结构")]),this._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("├── /dist/ \t\t# 项目输出目录 \n├── /lib/ \t\t# 项目源码目录 \n│ ├── /adapters/ \t# 定义请求的适配器 xhr、http \n│ │ ├── http.js \t# 实现 http 适配器(包装 http 包) \n│ │ └── xhr.js \t\t# 实现 xhr 适配器(包装 xhr 对象) \n│ ├── /cancel/ \t\t# 定义取消功能 \n│ ├── /core/ \t\t# 一些核心功能 \n│ │ ├── Axios.js \t\t\t   # axios 的核心主类 \n│ │ ├── dispatchRequest.js \t\t# 用来调用 http 请求适配器方法发送请求的函数 \n│ │ ├── InterceptorManager.js \t# 拦截器的管理器 \n│ │ └── settle.js \t\t\t   # 根据 http 响应状态，改变 Promise 的状态 \n│ ├── /helpers/ \t# 一些辅助方法 \n│ ├── axios.js \t\t# 对外暴露接口 \n│ ├── defaults.js \t# axios 的默认配置 \n│ └── utils.js \t\t# 公用工具 \n├── package.json # 项目信息 \n├── index.d.ts \t # 配置 TypeScript 的声明文件 \n└── index.js \t # 入口文件\n")])])])])}),[],!1,null,null,null);s.default=n.exports}}]);