(window.webpackJsonp=window.webpackJsonp||[]).push([[123],{626:function(t,v,_){"use strict";_.r(v);var o=_(10),i=Object(o.a)({},(function(){var t=this,v=t._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{id:"一、git基础概念"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#一、git基础概念"}},[t._v("#")]),t._v(" 一、Git基础概念")]),t._v(" "),v("p",[t._v("Git 是一个免费的，开源的分布式版本控制软件系统")]),t._v(" "),v("p",[v("strong",[t._v("1.版本控制")])]),t._v(" "),v("p",[t._v("一般情况下，一份文件，无论是DOC办公文档，还是编程源码文件，我们都会对文件进行大量的修改和变更。但是我们无法保证每一次的修改和变更都是正确并有效的，往往有的时候需要追溯历史操作。")]),t._v(" "),v("p",[t._v("而版本控制（Revision control）是一种在开发的过程中用于管理我们对文件、目录或工程等内容的修改历史，方便查看更改历史记录，备份以便恢复以前的版本的软件工程技术。")]),t._v(" "),v("p",[t._v("没有进行版本控制或者版本控制本身缺乏正确的流程管理，在软件开发过程中将会引入很多问题，如软件代码的一致性、软件内容的冗余、软件过程的事物性、软件开发过程中的并发性、软件源代码的安全性，以及软件的整合等问题。")]),t._v(" "),v("p",[v("strong",[t._v("2.分布式")])]),t._v(" "),v("p",[t._v("在 Git 中，每个版本库都是一样重要得。所以就不存在像集中式版本控制软件中以谁为主得问题。任何一个库都可以当成主库。")]),t._v(" "),v("p",[t._v("这种方式可以更大限度地保证项目资源得安全。")]),t._v(" "),v("p",[v("strong",[t._v("3.系统")])]),t._v(" "),v("p",[t._v("一般软件系统指的是可以独立运行的软件应用程序。而 Git 软件就是专门用于对代码文件进行版本控制得应用程序。同时也提供客户端对系统所管理得资源进行访问。")]),t._v(" "),v("p",[v("strong",[t._v("4.区域")])]),t._v(" "),v("p",[t._v("Git 软件为了更方便地对文件进行版本控制，根据功能得不同划分了三个区域")]),t._v(" "),v("ul",[v("li",[v("strong",[t._v("工作区（Working Directory)")]),t._v("：存放项目代码的地方；")]),t._v(" "),v("li",[v("strong",[t._v("缓存区（Index / Stage）")]),t._v("：也称为"),v("strong",[t._v("暂存区")]),t._v("，用于临时存放改动过的代码和文件，保存即将提交到文件列表信息；")]),t._v(" "),v("li",[v("strong",[t._v("版本库（Repository)")]),t._v("：工作区下隐藏文件夹"),v("code",[t._v(".git")]),t._v("；")]),t._v(" "),v("li",[v("strong",[t._v("本地仓库（History / Local Repository）")]),t._v("：也称为仓库区，安全存放数据和代码的位置，这里面有所有提交代码的版本数据，其中HEAD指向最新放入仓库的版本；")]),t._v(" "),v("li",[v("strong",[t._v("远程仓库（Remote Directory/Remote Repository）")]),t._v("：也称为远端仓库或者远端、远程，是托管代码的服务器，github/gitee这些就是我们熟知的远程仓库；")])]),t._v(" "),v("p",[v("strong",[t._v("5.文件状态")]),t._v("（刚刚添加到项目中的文件处于未跟踪状态）")]),t._v(" "),v("ol",[v("li",[t._v("未跟踪（untracked）")]),t._v(" "),v("li",[t._v("已修改（modified）：修改了文件，但还没保存到数据库中")]),t._v(" "),v("li",[t._v("已暂存（staged）：对一个已修改文件做了标记，将在下次提交中包含此文件，对应命令为 "),v("code",[t._v("git add")])]),t._v(" "),v("li",[t._v("已提交（committed）：数据已经保存在本地数据库中，对应命令为 "),v("code",[t._v("git commit")])])])])}),[],!1,null,null,null);v.default=i.exports}}]);