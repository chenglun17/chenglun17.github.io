(window.webpackJsonp=window.webpackJsonp||[]).push([[133],{645:function(t,s,a){"use strict";a.r(s);var n=a(10),r=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"url-模块"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#url-模块"}},[t._v("#")]),t._v(" url 模块")]),t._v(" "),s("h2",{attrs:{id:"基本概念"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基本概念"}},[t._v("#")]),t._v(" 基本概念")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://nodejs.cn/api/url.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("url 模块"),s("OutboundLink")],1),t._v("提供了一些实用函数，用于URL处理与解析。")]),t._v(" "),s("p",[t._v("引入模块：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" url "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'url'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("一个 URL 字符串是一个结构化的字符串，它包含多个有意义的组成部分。 当被解析时，会返回一个 URL 对象，它包含每个组成部分作为属性。")]),t._v(" "),s("p",[t._v("URL（Uniform Location Resource）翻译为“统一资源定位符”，也就是描述资源位置的固定表示方法。被URL描述的资源可以位于互联网上，也可以位于本地。")]),t._v(" "),s("h2",{attrs:{id:"url-字符串和-url-对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#url-字符串和-url-对象"}},[t._v("#")]),t._v(" URL 字符串和 URL 对象")]),t._v(" "),s("p",[t._v("网址字符串是包含多个有意义组件的结构化字符串。 解析时，将返回包含每个组件的属性的网址对象。")]),t._v(" "),s("p",[t._v("下面提供了 WHATWG 和旧版 API 之间的比较。 在网址 "),s("code",[t._v("'https://user:pass@sub.example.com:8080/p/a/t/h?query=string#hash'")])]),t._v(" "),s("p",[t._v("上方显示的是由旧版 "),s("code",[t._v("url.parse()")]),t._v(" 返回的对象的属性。 下方则是 WHATWG "),s("code",[t._v("URL")]),t._v(" 对象的属性。")]),t._v(" "),s("div",{staticClass:"language-text extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('┌────────────────────────────────────────────────────────────────────────────────────────────────┐\n│                                              href                                              │\n├──────────┬──┬─────────────────────┬────────────────────────┬───────────────────────────┬───────┤\n│ protocol │  │        auth         │          host          │           path            │ hash  │\n│          │  │                     ├─────────────────┬──────┼──────────┬────────────────┤       │\n│          │  │                     │    hostname     │ port │ pathname │     search     │       │\n│          │  │                     │                 │      │          ├─┬──────────────┤       │\n│          │  │                     │                 │      │          │ │    query     │       │\n"  https:   //    user   :   pass   @ sub.example.com : 8080   /p/a/t/h  ?  query=string   #hash "\n│          │  │          │          │    hostname     │ port │          │                │       │\n│          │  │          │          ├─────────────────┴──────┤          │                │       │\n│ protocol │  │ username │ password │          host          │          │                │       │\n├──────────┴──┼──────────┴──────────┼────────────────────────┤          │                │       │\n│   origin    │                     │         origin         │ pathname │     search     │ hash  │\n├─────────────┴─────────────────────┴────────────────────────┴──────────┴────────────────┴───────┤\n│                                              href                                              │\n└────────────────────────────────────────────────────────────────────────────────────────────────┘\n(All spaces in the "" line should be ignored. They are purely for formatting.) \n')])])]),s("p",[t._v("WHATWG 网址的 "),s("code",[t._v("origin")]),t._v(" 属性包括 "),s("code",[t._v("protocol")]),t._v(" 和 "),s("code",[t._v("host")]),t._v("，但不包括 "),s("code",[t._v("username")]),t._v(" 或 "),s("code",[t._v("password")]),t._v("。")]),t._v(" "),s("h2",{attrs:{id:"基本使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基本使用"}},[t._v("#")]),t._v(" 基本使用")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("url.parse(urlString)")]),t._v("，字符串类型解析成对象")]),t._v(" "),s("li",[s("code",[t._v("url.format(urlObject)")]),t._v("，对象类型转字符串")]),t._v(" "),s("li",[s("code",[t._v("url.resolve(from,to)")]),t._v("，路径拼接")])]),t._v(" "),s("p",[t._v("因为 node.js 的 url.parse() 采用的传统的 urlObject，不符合URL现存标准WHATWG URL API，因此"),s("strong",[t._v("弃用")]),t._v("了（其余两个被标记为旧版）。")]),t._v(" "),s("p",[t._v("官方推荐可以使用URL类")]),t._v(" "),s("h3",{attrs:{id:"new-url"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#new-url"}},[t._v("#")]),t._v(" new URL()")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" http "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'http'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" url "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'url'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" str "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'https://www.google.com:8080/a/b?x=1&y=2&y=3&y=4'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" urlObj "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("URL")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("urlObj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("urlObj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 可以将实例解析为字符串url")]),t._v("\n")])])]),s("p",[t._v("打印结果为：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("URL {\n  href: 'https://www.google.com:8080/a/b?x=1&y=2&y=3&y=4',\n  origin: 'https://www.google.com:8080',\n  protocol: 'https:',\n  username: '',\n  password: '',\n  host: 'www.google.com:8080',\n  hostname: 'www.google.com',\n  port: '8080',\n  pathname: '/a/b',\n  search: '?x=1&y=2&y=3&y=4',\n  searchParams: URLSearchParams { 'x' => '1', 'y' => '2', 'y' => '3', 'y' => '4' },\n  hash: ''\n}\n\nhttps://www.google.com:8080/a/b?x=1&y=2&y=3&y=4\n")])])]),s("p",[s("strong",[t._v("URL对象中的成员如下：")])]),t._v(" "),s("ul",[s("li",[t._v("href：未经解析的URL地址，都表示为小写")]),t._v(" "),s("li",[t._v("origin：源地址，包含协议（protocol）、主机（host），例如 "),s("code",[t._v("'https://www.google.com:8080'")])]),t._v(" "),s("li",[t._v("protocol：协议类型，表示为小写，如 "),s("code",[t._v("'https:'")])]),t._v(" "),s("li",[t._v("username：用户名")]),t._v(" "),s("li",[t._v("password：密码")]),t._v(" "),s("li",[t._v("host：主机（包括端口），例如 "),s("code",[t._v("'www.google.com:8080'")])]),t._v(" "),s("li",[t._v("hostname：主机名，例如 "),s("code",[t._v("'www.google.com'")])]),t._v(" "),s("li",[t._v("port：端口号，例如 "),s("code",[t._v("8000")])]),t._v(" "),s("li",[t._v("pathname：路径名，在主机名之后，查询语句之前的地址部分，包含‘/’，例如 "),s("code",[t._v("/a/b")])]),t._v(" "),s("li",[t._v("search：URL地址的查询部分，包括开头的问号，例如 "),s("code",[t._v("'?x=1&y=2&y=3&y=4'")])]),t._v(" "),s("li",[t._v("searchParams：URL地址查询参数的 "),s("a",{attrs:{href:"https://nodejs.cn/api/url.html#class-urlsearchparams",target:"_blank",rel:"noopener noreferrer"}},[t._v("URLSearchParams"),s("OutboundLink")],1),t._v(" 对象，该属性是只读的")]),t._v(" "),s("li",[t._v("hash：URL地址中 "),s("code",[t._v("'#'")]),t._v(" 字符后的片段")])])])}),[],!1,null,null,null);s.default=r.exports}}]);