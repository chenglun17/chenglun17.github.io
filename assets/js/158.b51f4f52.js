(window.webpackJsonp=window.webpackJsonp||[]).push([[158],{702:function(t,s,a){"use strict";a.r(s);var n=a(10),r=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"javascript-基础"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#javascript-基础"}},[t._v("#")]),t._v(" JavaScript 基础")]),t._v(" "),s("h2",{attrs:{id:"字面量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#字面量"}},[t._v("#")]),t._v(" ⭐️字面量")]),t._v(" "),s("p",[t._v("字面量（literal）是在计算机中描述事或物。")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("数字（Number）字面量")]),t._v(" 可以是整数或者是小数，或者是科学计数(e)：")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.14")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("101")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("123e5")]),t._v("\n")])])]),s("ul",[s("li",[s("strong",[t._v("字符串（String）字面量")]),t._v(" 可以使用单引号或双引号:")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"chenglun17"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'chenlun17'")]),t._v("\n")])])]),s("ul",[s("li",[s("strong",[t._v("表达式字面量")]),t._v(" 用于计算：")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),t._v("\n")])])]),s("ul",[s("li",[s("strong",[t._v("数组（Array）字面量")]),t._v(" 定义一个数组：")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("40")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("25")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),s("blockquote",[s("p",[t._v("声明了一个空数组，里面没有内容，let arr = [ ]，则输出的话是"),s("strong",[t._v("undefined")])])]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("对象（Object）字面量")]),t._v(" 定义一个对象：")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("firstName")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Bruce"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("lastName")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Lee"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("age")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("32")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("ul",[s("li",[s("strong",[t._v("函数（Function）字面量")]),t._v(" 定义一个函数：")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("myFunction")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"数据类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据类型"}},[t._v("#")]),t._v(" ⭐️数据类型")]),t._v(" "),s("p",[t._v("JavaScript 中有 7 种数据类型：")]),t._v(" "),s("ul",[s("li",[t._v("数字（Number）, 字符串（String）, 布尔值（Boolean）, 未定义（Undefined）, 空（Null）, 对象（Object）, Symbol。")])]),t._v(" "),s("blockquote",[s("p",[s("strong",[t._v("Symbol")]),t._v(" 是 ES6 引入了一种新的原始数据类型，表示独一无二的值。")]),t._v(" "),s("p",[s("strong",[t._v("null")]),t._v("：表示赋值了，但内容为空，"),s("strong",[t._v("undefined")]),t._v("：表示没有赋值。")])]),t._v(" "),s("p",[s("strong",[t._v("基本数据类型（原始数据类型）")]),t._v("：String、Number、Boolean、Null、Undefined、Symbol。（6种）")]),t._v(" "),s("ul",[s("li",[t._v("存储在"),s("strong",{staticStyle:{color:"#DD5145"}},[t._v("栈（stack）")]),t._v("中的简单数据段，占据空间小，大小固定，属于被频繁使用的数据，所以存储在栈中。")])]),t._v(" "),s("p",[s("strong",[t._v("引用数据类型")]),t._v("（对象类型）：Object，包含 数组（Array）、函数（Function）、正则（RegExp） 和 日期（Date）等。")]),t._v(" "),s("ul",[s("li",[t._v("存储在"),s("strong",{staticStyle:{color:"#DD5145"}},[t._v("堆（heap）")]),t._v("中的对象，占据空间大，大小不固定。引用数据类型在栈中存储了指针，该指针指向堆中该实体的起始地址，当解释器寻找引用值时，会首先检索其在栈中的地址，取得地址后，从堆中获得实体。")])]),t._v(" "),s("p",[t._v("JavaScript 拥有动态类型，这意味着相同的变量可用作不同的类型。")]),t._v(" "),s("h2",{attrs:{id:"类型转换"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#类型转换"}},[t._v("#")]),t._v(" ⭐️类型转换")]),t._v(" "),s("h3",{attrs:{id:"boolean-转换"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#boolean-转换"}},[t._v("#")]),t._v(" Boolean 转换")]),t._v(" "),s("p",[t._v("只有 7 种 "),s("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Glossary/Falsy",target:"_blank",rel:"noopener noreferrer"}},[t._v("falsy"),s("OutboundLink")],1),t._v(" 值："),s("code",[t._v("''")]),t._v("(空字符串)、"),s("code",[t._v("0")]),t._v("、"),s("code",[t._v("-0")]),t._v("、"),s("code",[t._v("undefined")]),t._v("、"),s("code",[t._v("null")]),t._v("、"),s("code",[t._v("false")]),t._v("、"),s("code",[t._v("NaN")]),t._v("。")]),t._v(" "),s("p",[t._v("以下情况都是 "),s("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Glossary/Truthy",target:"_blank",rel:"noopener noreferrer"}},[t._v("truthy"),s("OutboundLink")],1),t._v(" 值：")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("Function")]),t._v("构造函数，比如 "),s("code",[t._v("new Number")])]),t._v(" "),s("li",[t._v("任何对象、包括空对象"),s("code",[t._v("{}")])]),t._v(" "),s("li",[t._v("空数组"),s("code",[t._v("[]")])]),t._v(" "),s("li",[t._v("非空字符串"),s("code",[t._v('"false"')])])]),t._v(" "),s("h3",{attrs:{id:"隐式转换"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#隐式转换"}},[t._v("#")]),t._v(" 隐式转换")]),t._v(" "),s("ul",[s("li",[s("strong",{staticStyle:{color:"#DD5145"}},[t._v("任何数据 + 字符串 结果都为字符串")])]),t._v(" "),s("li",[t._v('减法 -（像大多数数学运算一样）只能用与数字，它会使空字符串 " " 转换为 0')]),t._v(" "),s("li",[s("code",[t._v("null")]),t._v(" 经过数字转换之后会变成 0")]),t._v(" "),s("li",[s("code",[t._v('""')]),t._v(" (空串) 经过数字转换之后会变成 0")]),t._v(" "),s("li",[s("code",[t._v("undefined")]),t._v(" 经过数字转换之后会变成 "),s("code",[t._v("NaN")])]),t._v(" "),s("li",[s("strong",[t._v("+")]),t._v(" 号为正号解析可以转换成数字型")])]),t._v(" "),s("h3",{attrs:{id:"显示转换"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#显示转换"}},[t._v("#")]),t._v(" 显示转换")]),t._v(" "),s("ul",[s("li",[t._v("Number() 字符串内容里有非数字得到 NaN")]),t._v(" "),s("li",[t._v("parseInt()")]),t._v(" "),s("li",[t._v("parseFloat()")]),t._v(" "),s("li",[t._v("String()")]),t._v(" "),s("li",[t._v("变量.toString(进制)")])]),t._v(" "),s("h2",{attrs:{id:"运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#运算符"}},[t._v("#")]),t._v(" ⭐️运算符")]),t._v(" "),s("h3",{attrs:{id:"_1-赋值运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-赋值运算符"}},[t._v("#")]),t._v(" 1.赋值运算符")]),t._v(" "),s("h3",{attrs:{id:"_2-一元运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-一元运算符"}},[t._v("#")]),t._v(" 2.一元运算符")]),t._v(" "),s("h3",{attrs:{id:"_3-比较运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-比较运算符"}},[t._v("#")]),t._v(" 3.比较运算符")]),t._v(" "),s("h3",{attrs:{id:"_4-逻辑运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-逻辑运算符"}},[t._v("#")]),t._v(" 4.逻辑运算符")]),t._v(" "),s("p",[s("strong",[t._v("逻辑中断")]),t._v("：js 利用逻辑运算符 "),s("strong",[t._v("&&")]),t._v(" 和 "),s("strong",[t._v("||")]),t._v(" 代替 if else 写判断语句")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("22")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 22")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("22")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 0")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("33")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("33")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 33")]),t._v("\n\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("33")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("44")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 33")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("55")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 55")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("66")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 66")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("66")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])])]),s("ul",[s("li",[s("p",[s("strong",[t._v("a && b")]),t._v(" "),s("strong",[t._v("一假则假")]),t._v("，左边为 false 就短路")]),t._v(" "),s("p",[s("strong",[t._v("&& 前面是 true")]),t._v("，无论 && 后面是 true 还是false，结果都将"),s("strong",[t._v("返回 && 后面的值")]),t._v("。")]),t._v(" "),s("p",[t._v("&& 前面是 false，无论 && 后面是 true 还是 false，结果都将返回去 && 前面的值。")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("a || b")]),t._v(" "),s("strong",[t._v("一真则真")]),t._v("，左边为 true 就短路")]),t._v(" "),s("p",[s("strong",[t._v("|| 前面为 true")]),t._v("，无论 || 后面是 true 还是 false，结果都将"),s("strong",[t._v("返回 || 前面的值")]),t._v("。")]),t._v(" "),s("p",[t._v("|| 前面为 false，无论 || 后面是 true 还是 false，结果都将返回 || 后面的值。")])])]),t._v(" "),s("h3",{attrs:{id:"_5-运算符优先级"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-运算符优先级"}},[t._v("#")]),t._v(" 5.运算符优先级")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("优先级")]),t._v(" "),s("th",[t._v("运算符")]),t._v(" "),s("th",[t._v("顺序")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("1")]),t._v(" "),s("td",[t._v("小括号")]),t._v(" "),s("td",[t._v("()")])]),t._v(" "),s("tr",[s("td",[t._v("2")]),t._v(" "),s("td",[t._v("一元运算符")]),t._v(" "),s("td",[t._v("++、--、!")])]),t._v(" "),s("tr",[s("td",[t._v("3")]),t._v(" "),s("td",[t._v("算数运算符")]),t._v(" "),s("td",[t._v("先 * / % 后 + -")])]),t._v(" "),s("tr",[s("td",[t._v("4")]),t._v(" "),s("td",[t._v("关系运算符")]),t._v(" "),s("td",[t._v("> >= < <=")])]),t._v(" "),s("tr",[s("td",[t._v("5")]),t._v(" "),s("td",[t._v("相等运算符")]),t._v(" "),s("td",[t._v("== != === !==")])]),t._v(" "),s("tr",[s("td",[t._v("6")]),t._v(" "),s("td",[t._v("逻辑运算符")]),t._v(" "),s("td",[t._v("先 && 后 | |")])]),t._v(" "),s("tr",[s("td",[t._v("7")]),t._v(" "),s("td",[t._v("赋值运算符")]),t._v(" "),s("td",[t._v("=")])]),t._v(" "),s("tr",[s("td",[t._v("8")]),t._v(" "),s("td",[t._v("逗号运算符")]),t._v(" "),s("td",[t._v(",")])])])]),t._v(" "),s("h3",{attrs:{id:"_6-比较运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-比较运算符"}},[t._v("#")]),t._v(" 6.比较运算符")]),t._v(" "),s("p",[s("strong",[t._v("基本类型")]),t._v("通过它们的"),s("strong",[t._v("值（value）"),s("strong",[t._v("进行比较，而")]),t._v("对象")]),t._v("通过它们的**引用（reference）**进行比较。JavaScript 检查对象是否具有对内存中相同位置的引用。")]),t._v(" "),s("h4",{attrs:{id:"等于操作符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#等于操作符"}},[t._v("#")]),t._v(" 等于操作符（==）")]),t._v(" "),s("p",[t._v("等于操作符（==）在比较中会"),s("strong",[t._v("先进行类型转换")]),t._v("，再确定操作数是否相等，如果操作数相等，则会返回 "),s("code",[t._v("true")]),t._v("。")]),t._v(" "),s("ul",[s("li",[t._v("如果任一操作数是布尔值，则将其转换为数值再比较是否相等")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" result1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])])]),s("ul",[s("li",[s("code",[t._v("null")]),t._v("和"),s("code",[t._v("undefined")]),t._v("相等")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" result1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])])]),s("ul",[s("li",[t._v("如果有任一操作数是 "),s("code",[t._v("NaN")]),t._v(" ，则相等操作符返回 "),s("code",[t._v("false")])])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" result1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("NaN")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("NaN")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n")])])]),s("ul",[s("li",[t._v("如果两个操作数都是对象，则比较它们是不是同一个对象。如果两个操作数都指向同一个对象，则相等操作符返回"),s("code",[t._v("true")])])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" obj1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"xxx"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" obj2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"xxx"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" result1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" obj2 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n")])])]),s("blockquote",[s("p",[t._v("两个都为引用类型，则比较它们是否指向同一个对象")])]),t._v(" "),s("h4",{attrs:{id:"全等操作符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#全等操作符"}},[t._v("#")]),t._v(" 全等操作符（===）")]),t._v(" "),s("p",[t._v("全等操作符，只有两个操作数在"),s("strong",[t._v("不转换类型")]),t._v("的前提下相等才返回 "),s("code",[t._v("true")]),t._v("。即"),s("strong",[t._v("类型相同，值也需相同")]),t._v("。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" result1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"55"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("55")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false，不相等，因为数据类型不同")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" result2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("55")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("55")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true，相等，因为数据类型相同值也相同")]),t._v("\n")])])]),s("ul",[s("li",[s("code",[t._v("undefined")]),t._v(" 和 "),s("code",[t._v("null")]),t._v(" 与自身严格相等")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" result1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" result2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])])]),s("h2",{attrs:{id:"语句"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#语句"}},[t._v("#")]),t._v(" ⭐️语句")]),t._v(" "),s("h3",{attrs:{id:"条件语句"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#条件语句"}},[t._v("#")]),t._v(" 条件语句")]),t._v(" "),s("p",[t._v("在 JavaScript 中，我们可使用以下条件语句：")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("if 语句")]),t._v(" - 只有当指定条件为 true 时，使用该语句来执行代码")]),t._v(" "),s("li",[s("strong",[t._v("if...else 语句")]),t._v(" - 当条件为 true 时执行代码，当条件为 false 时执行其他代码")]),t._v(" "),s("li",[s("strong",[t._v("if...else if....else 语句")]),t._v(" - 使用该语句来选择多个代码块之一来执行")]),t._v(" "),s("li",[s("strong",[t._v("switch 语句")]),t._v(" - 使用该语句来选择多个代码块之一来执行")])]),t._v(" "),s("h3",{attrs:{id:"switch-语句"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#switch-语句"}},[t._v("#")]),t._v(" switch 语句")]),t._v(" "),s("ul",[s("li",[t._v("switch case 语句一般用于等值判断，不适合区间判断")]),t._v(" "),s("li",[t._v("switch case 一般需要配合 break 关键字使用，没有 break 会造成 "),s("strong",[t._v("case 穿透")])])]),t._v(" "),s("p",[t._v("语法：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("switch")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n        执行代码块 "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n        执行代码块 "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n        与 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" 和 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" 不同时执行的代码\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"循环语句"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#循环语句"}},[t._v("#")]),t._v(" 循环语句")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("while(true)")]),t._v(' 来构造"无限循环"，需要使用 break 退出循环')]),t._v(" "),s("li",[s("code",[t._v("for(; ;)")]),t._v(' 也可以来构造 "无限循环"，同样需要使用 break 退出循环')])]),t._v(" "),s("h4",{attrs:{id:"for-循环"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#for-循环"}},[t._v("#")]),t._v(" for 循环")]),t._v(" "),s("h4",{attrs:{id:"while-循环"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#while-循环"}},[t._v("#")]),t._v(" while 循环")]),t._v(" "),s("h4",{attrs:{id:"do-while-循环"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#do-while-循环"}},[t._v("#")]),t._v(" do / while 循环")]),t._v(" "),s("p",[t._v("do / while 循环是 while 循环的变体。该循环会在检查条件是否为真之前执行一次代码块，然后如果条件为真的话，就会重复这个循环。")]),t._v(" "),s("p",[t._v("语法：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    需要执行的代码\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("条件"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h2",{attrs:{id:"对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#对象"}},[t._v("#")]),t._v(" ⭐️对象")]),t._v(" "),s("p",[t._v("对象是一种数据类型，一种无序的数据的集合，可以详细的描述某个事物。")]),t._v(" "),s("p",[t._v("JavaScript 中的对象分为3种："),s("strong",[t._v("自定义对象")]),t._v("、"),s("strong",[t._v("内置对象")]),t._v("、"),s("strong",[t._v("浏览器对象")])]),t._v(" "),s("p",[t._v("前面两种对象是 JS 基础内容，属于 ECMAScript；第三个浏览器对象属于 JavaScript 独有的（Web API 讲解）。")]),t._v(" "),s("ul",[s("li",[t._v("内置对象：JS 语言自带的一些对象，供开发者使用，并提供一些常用的或是最基本而非必要的功能（属性和方法）")]),t._v(" "),s("li",[t._v("内置对象最大的优点就是可以帮助快速开发")]),t._v(" "),s("li",[t._v("JavaScript 提供多个内置对象：Math、Date、Array、String 等")])]),t._v(" "),s("h3",{attrs:{id:"_1-创建对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-创建对象"}},[t._v("#")]),t._v(" 1.创建对象")]),t._v(" "),s("ol",[s("li",[t._v("利用 "),s("strong",{staticStyle:{color:"#DD5145"}},[t._v("对象字面量")]),t._v(" 创建对象")])]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" obj "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("uname")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'pink老师'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("age")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("ol",{attrs:{start:"2"}},[s("li",[t._v("利用 "),s("strong",{staticStyle:{color:"#DD5145"}},[t._v("new Object")]),t._v(" 创建对象")])]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("cosnt obj "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("uname")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'pink老师'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("age")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nobj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("age "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),t._v("\n")])])]),s("ol",{attrs:{start:"3"}},[s("li",[s("p",[t._v("利用 "),s("strong",{staticStyle:{color:"#DD5145"}},[t._v("构造函数")]),t._v(" 创建对象")]),t._v(" "),s("p",[t._v("详细见后续章节 "),s("em",[s("strong",[t._v("深入对象")])])])])]),t._v(" "),s("h3",{attrs:{id:"_2-访问对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-访问对象"}},[t._v("#")]),t._v(" 2.访问对象")]),t._v(" "),s("p",[t._v("对象由属性（静态）和方法（即函数，动态）组成。对象里面可以存储任何数据类型。")]),t._v(" "),s("p",[s("strong",{staticStyle:{color:"#DD5145"}},[t._v("注意")]),t._v("：在 JavaScript 中，所有对象的 keys 都是 "),s("strong",[t._v("字符串")]),t._v("（除非对象是 Symbol）。尽管我们可能不会定义它们为字符串，但它们在底层总会被转换为字符串。")]),t._v(" "),s("p",[t._v("当我们使用括号语法时（"),s("code",[t._v("[]")]),t._v("），JavaScript 会解释语句。它首先看到第一个开始括号 "),s("code",[t._v("[")]),t._v(" 并继续前进直到找到结束括号 "),s("code",[t._v("]")]),t._v("。只有这样，它才会计算语句的值。")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 方法一：")]),t._v("\n对象名"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("属性名 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" 对象名"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'属性名'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 访问对象的方法的时候，只能用.访问")]),t._v("\n对象名"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("方法\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 方法二：属性名是动态，属性名可为字符串，一定要加引号")]),t._v("\n对象名"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'属性名'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果是变量是不需要加引号的")]),t._v("\n对象名"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("变量名"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),s("ul",[s("li",[t._v("使用"),s("strong",{staticStyle:{color:"#DD5145"}},[t._v("点语法")]),t._v("访问属性："),s("strong",[s("code",[t._v("object.property === object['property']")])])]),t._v(" "),s("li",[t._v("使用"),s("strong",{staticStyle:{color:"#DD5145"}},[t._v("括号语法")]),t._v("访问属性："),s("strong",[s("code",[t._v("object[property]")])]),t._v("，如果是变量则不需要加引号")]),t._v(" "),s("li",[t._v("对象解构："),s("strong",[s("code",[t._v("const { property } = object")])])])]),t._v(" "),s("h3",{attrs:{id:"_3-遍历对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-遍历对象"}},[t._v("#")]),t._v(" 3.遍历对象")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" obj "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("uname")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'chenglun17'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("age")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("gender")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'男'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("speak")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n \t\t\tdocument"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("write")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'我喜欢跑步！'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 遍历对象用 for in循环")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" k "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("k"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// k 是获得对象的 属性名，属性名 'uname'，'age'")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("k"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// \t对象名[k] 是获得 属性值")]),t._v("\n    \n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("k"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 报错undefined，等价于obj.'uname'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 调用方法")]),t._v("\nobj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("speak")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h3",{attrs:{id:"_4-对象转换为字符串"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-对象转换为字符串"}},[t._v("#")]),t._v(" 4.对象转换为字符串")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 返回 '[object Object]'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("a")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 返回 '[object Object]'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("a")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 返回 '[object Object]'")]),t._v("\n")])])]),s("p",[s("strong",{staticStyle:{color:"tomato"}},[t._v("注意")]),t._v("：在 JavaScript 中，所有对象的 keys 都是 "),s("strong",[t._v("字符串")]),t._v("（除非对象是 Symbol）。尽管我们可能不会定义它们为字符串，但它们在底层总会被转换为字符串。")]),t._v(" "),s("h2",{attrs:{id:"数组对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数组对象"}},[t._v("#")]),t._v(" ⭐️数组对象")]),t._v(" "),s("h3",{attrs:{id:"_1-创建数组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-创建数组"}},[t._v("#")]),t._v(" 1.创建数组")]),t._v(" "),s("p",[t._v("两种方式：")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("利用 "),s("strong",{staticStyle:{color:"#DD5145"}},[t._v("数组字面量")]),t._v(" 创建数组")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" arr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])]),t._v(" "),s("li",[s("p",[t._v("利用 "),s("strong",{staticStyle:{color:"#DD5145"}},[t._v("new Array")]),t._v(" 创建数组")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" arr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Array")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 创建了一个长度为2的空数组")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" arr1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Array")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 创建了一个数组[2, 3]")]),t._v("\n")])])])])]),t._v(" "),s("p",[t._v("数组元素可以包含任何值。 数字，字符串，布尔值，对象，数组，"),s("code",[t._v("null")]),t._v("，"),s("code",[t._v("undeifned")]),t._v("，以及其他表达式，如日期，函数和计算。")]),t._v(" "),s("h3",{attrs:{id:"_2-检查是否为数组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-检查是否为数组"}},[t._v("#")]),t._v(" 2.检查是否为数组")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("instanceof 运算符")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" arr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arr "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Array")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])]),t._v(" "),s("li",[s("p",[t._v("Array.isArray(参数)")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Array"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isArray")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])])]),t._v(" "),s("h3",{attrs:{id:"_3-数组排序"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-数组排序"}},[t._v("#")]),t._v(" 3.数组排序")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("方法名")]),t._v(" "),s("th",[t._v("说明")]),t._v(" "),s("th",[t._v("是否修改原数组")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("reverse( )")]),t._v(" "),s("td",[t._v("颠倒数组中的元素的顺序，无参数")]),t._v(" "),s("td",[t._v("会改变原数组，返回一个新数组")])]),t._v(" "),s("tr",[s("td",[t._v("sort( )")]),t._v(" "),s("td",[t._v("对数组的元素进行排序")]),t._v(" "),s("td",[t._v("会改变原数组，返回一个新数组")])])])]),t._v(" "),s("p",[s("strong",[t._v("sort排序：")]),s("code",[t._v("arr.sort([compareFunction])")])]),t._v(" "),s("p",[t._v("返回值为排序后的数组。")]),t._v(" "),s("p",[t._v("注意，数组已原地排序，并且不进行复制（"),s("strong",[t._v("返回的是原地排序的原数组")]),t._v("，并不是创建的新数组）")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 升序排序，第一个参数是前一个对象，第二个参数是后一个对象")]),t._v("\narr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sort")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" b\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 降序排序")]),t._v("\narr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sort")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" b "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" a\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 若 a = b，则返回 0")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 教大家一个最好记的方法：")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1.第一个参数是升序，第二个参数是降序")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2.如果想要xx序，就用xx序参数 - 另外一个参数")]),t._v("\n")])])]),s("h3",{attrs:{id:"_4-数组转换为字符串"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-数组转换为字符串"}},[t._v("#")]),t._v(" 4.数组转换为字符串")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("方法名")]),t._v(" "),s("th",[t._v("说明")]),t._v(" "),s("th",[t._v("返回值")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("toString( )")]),t._v(" "),s("td",[t._v("把数组转换成字符串，逗号分隔每一项")]),t._v(" "),s("td",[t._v("返回一个字符串")])]),t._v(" "),s("tr",[s("td",[s("strong",[s("code",[t._v("join('分隔符')")])])]),t._v(" "),s("td",[t._v("方法用于把数组中的所有元素转换成为一个"),s("strong",[t._v("字符串")])]),t._v(" "),s("td",[t._v("返回一个字符串")])])])]),t._v(" "),s("p",[s("strong",[s("code",[t._v("join()")])]),t._v(" 方法用于把"),s("strong",[t._v("数组")]),t._v("中的所有元素"),s("strong",[t._v("转换为一个字符串")]),t._v("，数组元素是通过指定的"),s("strong",[t._v("分隔符")]),t._v("进行分隔的。")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" arr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'red颜色'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'blue颜色'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'green颜色'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("join")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// red颜色blue颜色green颜色")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 与split('分隔符') （把字符串转换为数组）相反")]),t._v("\n")])])]),s("h3",{attrs:{id:"_5-数组其他操作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-数组其他操作"}},[t._v("#")]),t._v(" 5.数组其他操作")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("方法名")]),t._v(" "),s("th",[t._v("说明")]),t._v(" "),s("th",[t._v("返回值")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("push( )")]),t._v(" "),s("td",[t._v("向数组的"),s("strong",[t._v("末尾添加")]),t._v("一个或多个元素，注意修改原数组")]),t._v(" "),s("td",[s("strong",[t._v("返回新的长度")])])]),t._v(" "),s("tr",[s("td",[t._v("pop( )")]),t._v(" "),s("td",[t._v("删除数组最后一个元素，数组长度+1，无参数、修改原数组")]),t._v(" "),s("td",[t._v("返回它删除的元素值")])]),t._v(" "),s("tr",[s("td",[t._v("unshift( )")]),t._v(" "),s("td",[t._v("向数组的"),s("strong",[t._v("开头添加")]),t._v("一个或多个元素，注意修改原数组")]),t._v(" "),s("td",[s("strong",[t._v("返回新的长度")])])]),t._v(" "),s("tr",[s("td",[t._v("shift( )")]),t._v(" "),s("td",[t._v("删除数组的第一个元素")]),t._v(" "),s("td",[t._v("返回它删除的元素值")])]),t._v(" "),s("tr",[s("td",[t._v("slice( )")]),t._v(" "),s("td",[t._v("数组"),s("strong",[t._v("截取")]),t._v(" slice(begin, end)")]),t._v(" "),s("td",[t._v("返回被截取项目的新数组")])]),t._v(" "),s("tr",[s("td",[t._v("concat( )")]),t._v(" "),s("td",[t._v("连接两个或多个数组，不影响原数组")]),t._v(" "),s("td",[t._v("返回一个新数组")])])])]),t._v(" "),s("h2",{attrs:{id:"字符串对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#字符串对象"}},[t._v("#")]),t._v(" ⭐️字符串对象")]),t._v(" "),s("h3",{attrs:{id:"_1-字符串的不可变"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-字符串的不可变"}},[t._v("#")]),t._v(" 1.字符串的不可变")]),t._v(" "),s("p",[t._v("指的是里面的值不可变，虽然看上去可以改变内容，但其实是地址变了，内存中新开辟了一个内存空间。")]),t._v(" "),s("p",[t._v("字符串所有的方法，都不会修改字符串本身，操作完成会"),s("strong",[t._v("返回一个新的字符串")]),t._v("。")]),t._v(" "),s("h3",{attrs:{id:"_2-根据字符返回位置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-根据字符返回位置"}},[t._v("#")]),t._v(" 2.根据字符返回位置")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("方法名")]),t._v(" "),s("th",[t._v("说明")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[s("strong",[s("code",[t._v("indexOf()")])])]),t._v(" "),s("td",[t._v("返回指定内容在原字符串中的下标，如果找不到就返回 -1")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("indexOf('')")])]),t._v(" "),s("td",[t._v("indexOf一个空字符串的返回值是0")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("lastIndexOf()")])]),t._v(" "),s("td",[t._v("从后往前找，只找第一个匹配的")])])])]),t._v(" "),s("h3",{attrs:{id:"_3-根据位置返回字符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-根据位置返回字符"}},[t._v("#")]),t._v(" 3.根据位置返回字符")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("方法名")]),t._v(" "),s("th",[t._v("说明")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[s("strong",[s("code",[t._v("charAt(index)")])])]),t._v(" "),s("td",[t._v("返回指定位置的字符（index 字符串的索引号）")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("charCodeAt(index)")])]),t._v(" "),s("td",[t._v("获取指定位置处字符的ASCII码（index 索引号）")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("str[index]")])]),t._v(" "),s("td",[t._v("获取指定位置处字符")])])])]),t._v(" "),s("h3",{attrs:{id:"_4-字符串转换为数组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-字符串转换为数组"}},[t._v("#")]),t._v(" 4.字符串转换为数组")]),t._v(" "),s("p",[s("strong",[s("code",[t._v("split(separator[, limit])")])]),t._v(" 方法用于分割字符串，参数 separator 为分割符，可以使用正则表达式来表示，参数 limit 为分割的份数。")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" str "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hello'")]),t._v("\nstr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("split")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 返回 ['h', 'e', 'l', 'l', 'o']")]),t._v("\nstr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("split")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 返回 ['h', 'e', 'l']")]),t._v("\n")])])]),s("h3",{attrs:{id:"_5-字符串其他操作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-字符串其他操作"}},[t._v("#")]),t._v(" 5.字符串其他操作")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("方法名")]),t._v(" "),s("th",[t._v("说明")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("concat(str1,str2,str3...)")]),t._v(" "),s("td",[t._v("concat() 方法用于连接两个或多个字符串。拼接字符串，等效于+，+更常用")])]),t._v(" "),s("tr",[s("td",[t._v("substr(start,lenght)")]),t._v(" "),s("td",[t._v("从start 位置开始（索引号），length 取的个数")])]),t._v(" "),s("tr",[s("td",[t._v("slice(start,end)")]),t._v(" "),s("td",[t._v("从start 位置开始，截取到end 位置，end 取不到（他们俩都是索引号）")])]),t._v(" "),s("tr",[s("td",[t._v("substring(start,end)")]),t._v(" "),s("td",[t._v("从start 位置开始，截取到end 位置，end 取不到，基本和slice 相同，但不接受负值")])]),t._v(" "),s("tr",[s("td",[s("strong",[s("code",[t._v("replace('被替换的字符', '替换的字符')")])])]),t._v(" "),s("td",[t._v("替换字符，它只会替换第一个字符")])]),t._v(" "),s("tr",[s("td",[s("strong",[s("code",[t._v("trim()")])])]),t._v(" "),s("td",[t._v("去除字符串两侧的空格")])])])]),t._v(" "),s("h2",{attrs:{id:"日期对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#日期对象"}},[t._v("#")]),t._v(" ⭐️日期对象")]),t._v(" "),s("p",[t._v("Date（） 是一个构造函数，所有需要实例化后才能使用，必须使用 new 来调用创建我们的日期对象")]),t._v(" "),s("h3",{attrs:{id:"_1-实例化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-实例化"}},[t._v("#")]),t._v(" 1.实例化")]),t._v(" "),s("p",[t._v("在代码中发现了 "),s("strong",[t._v("new 关键字")]),t._v(" 时，一般将这个操作称为 "),s("strong",[t._v("实例化")])]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获取 当前时间")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" date "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Date")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 实例化对象")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获取 指定时间")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" date "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Date")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2008-8-8'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h3",{attrs:{id:"_2-日期对象方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-日期对象方法"}},[t._v("#")]),t._v(" 2.日期对象方法")]),t._v(" "),s("p",[t._v("使用下列方法之前 "),s("strong",[t._v("必须实例化")])]),t._v(" "),s("ul",[s("li",[t._v("getFullYear（） 获取年份，四位年份")]),t._v(" "),s("li",[t._v("getMonth（） 获取月份，取值 0~11，月份要 "),s("strong",[t._v("加1")])]),t._v(" "),s("li",[t._v("getDate（） 获取当月的具体一天")]),t._v(" "),s("li",[t._v("getDay（） 获取星期，取值 0~6，0代表星期天")]),t._v(" "),s("li",[t._v("getHours（） 获取小时，取值 0~23")]),t._v(" "),s("li",[t._v("getMinutes（） 获取分钟，取值 0~59")]),t._v(" "),s("li",[t._v("getSeconds（） 获取秒数，0~59")])]),t._v(" "),s("p",[t._v("时间的另一种方法")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" date "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Date")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("date"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Wed Mar 15 2023 20:27:09 GMT+0800 (中国标准时间)")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("date"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toLocaleString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2023/3/15 20:27:09")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("date"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toLocaleDateString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2023/3/15")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("date"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toLocaleTimeString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 20:27:09")]),t._v("\n")])])]),s("h3",{attrs:{id:"_3-时间戳"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-时间戳"}},[t._v("#")]),t._v(" 3.时间戳")]),t._v(" "),s("p",[t._v("是指1970年01月01日00时00分00秒起至今的毫秒数，它是一种特殊的计量时间的方式")]),t._v(" "),s("blockquote",[s("p",[s("strong",[t._v("将来的时间戳 - 现在的时间戳 = 剩余时间毫秒数")]),t._v(" 用作倒计时")])]),t._v(" "),s("p",[t._v("三种方式获取时间戳")]),t._v(" "),s("p",[t._v("方法一：使用 getTime()方法，必须先实例化")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" date "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Date")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("date"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getTime")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("方法二：简写 +new Date()")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Date")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Date")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2023-3-14 18:30:00'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("方法三：使用 Date.now()方法，无需实例化")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Date"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("now")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("blockquote",[s("p",[t._v("只能返回"),s("strong",[t._v("当前时间戳")]),t._v("，无法像前两种方法一样返回"),s("strong",[t._v("指定的时间戳")])])]),t._v(" "),s("h2",{attrs:{id:"函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#函数"}},[t._v("#")]),t._v(" ⭐️函数")]),t._v(" "),s("p",[t._v("函数是由事件驱动的或者当它被调用时执行的可重复使用的代码块。")]),t._v(" "),s("h3",{attrs:{id:"声明函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#声明函数"}},[t._v("#")]),t._v(" 声明函数")]),t._v(" "),s("p",[t._v("声明函数的5种方法：")]),t._v(" "),s("ol",[s("li",[t._v("function声明")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 声明")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fun")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'这是一个函数的打印结果'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 调用")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fun")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("blockquote",[s("p",[t._v("声明函数时可以不指定返回类型")])]),t._v(" "),s("ol",{attrs:{start:"2"}},[s("li",[t._v("匿名函数")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'这是一个匿名函数的打印'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n")])])]),s("blockquote",[s("p",[t._v("但是由于匿名函数在创建后无法访问，并且只能通过赋值给变量来访问，如下函数表达式")])]),t._v(" "),s("ol",{attrs:{start:"3"}},[s("li",[t._v("函数表达式")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("fun")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'这是一个函数表达式的打印'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fun")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("ol",{attrs:{start:"4"}},[s("li",[t._v("箭头函数")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'这是一个箭头函数的打印'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n")])])]),s("blockquote",[s("p",[t._v("但是，由于箭头函数没有名称，如果我们要调用它，它应该存储在一个变量中，就像函数表达式一样")])]),t._v(" "),s("ol",{attrs:{start:"5"}},[s("li",[t._v("构造函数")])]),t._v(" "),s("p",[t._v("声明函数的另一种方法是使用带有 "),s("code",[t._v("new")]),t._v(" 关键字的 "),s("code",[t._v("Function")]),t._v(" 构造函数")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" funcName "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'arg1'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'arg2'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'arg3'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'函数体'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n")])])]),s("h3",{attrs:{id:"返回值-return"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#返回值-return"}},[t._v("#")]),t._v(" 返回值 return")]),t._v(" "),s("ul",[s("li",[t._v("return 后面"),s("strong",[t._v("不接数据")]),t._v("或函数内"),s("strong",[t._v("不写return")]),t._v("，函数的默认返回值是"),s("strong",[t._v("undefined")])]),t._v(" "),s("li",[t._v("以返回"),s("strong",[t._v("数组")]),t._v("方式来实现返回多个值，同理也可以返回一个对象")])]),t._v(" "),s("h3",{attrs:{id:"立即执行函数-iife"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#立即执行函数-iife"}},[t._v("#")]),t._v(" 立即执行函数（IIFE）")]),t._v(" "),s("p",[t._v("立即执行函数（Immediately Invoked Function Expression，IIFE）是一个在定义时就会立即执行的 JavaScript 函数。")]),t._v(" "),s("p",[t._v("目的："),s("strong",{staticStyle:{color:"#DD5145"}},[t._v("防止变量污染，减少变量名冲突")]),t._v("。")]),t._v(" "),s("p",[t._v("它是一种设计模式，也被称为自执行匿名函数，主要包含两部分：")]),t._v(" "),s("ol",[s("li",[t._v("第一部分是一个具有词法作用域的匿名函数，并且用"),s("strong",[t._v("圆括号运算符 "),s("code",[t._v("()")])]),t._v(" 运算符闭合起来。这样不但阻止了外界访问 IIFE 中的变量，而且不会污染全局作用域。")]),t._v(" "),s("li",[t._v("第二部分创建了一个立即执行函数表达式 "),s("code",[t._v("()")]),t._v("，通过它，JavaScript 引擎将立即执行该函数。")])]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 方式一，第二个小括号相当于调用函数，其小括号里面的参数为形参")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 初始化代码")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" firstVariable"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" secondVariable"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// firstVariable 和 secondVariable 变量在函数执行后会被丢弃")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// …")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// …")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 方式二")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 方式三")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("blockquote",[s("p",[t._v("多个立即执行函数要用 **分号"),s("code",[t._v(";")]),t._v("**隔开，不然会报错")])]),t._v(" "),s("h3",{attrs:{id:"回调函数-callback"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#回调函数-callback"}},[t._v("#")]),t._v(" 回调函数（callback）")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://blog.csdn.net/weixin_47075145/article/details/125752446",target:"_blank",rel:"noopener noreferrer"}},[t._v("参考文章"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("如果将"),s("strong",[t._v("函数A做为参数")]),t._v("传递给"),s("strong",[t._v("函数B")]),t._v(" 时，称"),s("strong",[t._v("函数A为回调函数")]),t._v("。")]),t._v(" "),s("p",[t._v("执行完某个命名之后，回头调用的函数，简称"),s("strong",[t._v("回调函数")]),t._v("。")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("A")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 函数体")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 函数A 作为回调函数")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("A")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("blockquote",[s("p",[t._v("判断是否为回调函数，首先你得看调用它的是不是也是一个函数，它是不是作为了一个函数的参数")])]),t._v(" "),s("p",[s("strong",[t._v("回调函数特点：")])]),t._v(" "),s("ol",[s("li",[t._v("不会立即执行")]),t._v(" "),s("li",[t._v("回调函数是一个闭包")]),t._v(" "),s("li",[t._v("执行前类型判断")])]),t._v(" "),s("h2",{attrs:{id:"作用域"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#作用域"}},[t._v("#")]),t._v(" ⭐️作用域")]),t._v(" "),s("p",[t._v("作用域（scope）是可访问变量的集合，规定了变量能够被访问的 “范围”，离开这个 “范围” 变量便不能被访问。")]),t._v(" "),s("p",[t._v("变量访问的原则是"),s("strong",[t._v("就近原则")]),t._v("。")]),t._v(" "),s("h3",{attrs:{id:"局部作用域"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#局部作用域"}},[t._v("#")]),t._v(" 局部作用域")]),t._v(" "),s("p",[t._v("变量在函数内声明，变量为局部变量，具有局部作用域。")]),t._v(" "),s("ul",[s("li",[t._v("函数内部声明的变量，在函数外部无法被访问")]),t._v(" "),s("li",[t._v("函数的参数也是函数内部的局部变量")]),t._v(" "),s("li",[t._v("不同函数内部声明的变量无法互相访问")]),t._v(" "),s("li",[t._v("函数执行完毕后，函数内部的变量实际被清空了")])]),t._v(" "),s("h3",{attrs:{id:"块级作用域"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#块级作用域"}},[t._v("#")]),t._v(" 块级作用域")]),t._v(" "),s("p",[t._v("在 JavaScript 中使用 "),s("strong",[s("code",[t._v("{}")])]),t._v(" 包裹的代码称为代码块，代码块内部声明的变量外部"),s("strong",[t._v("有可能")]),t._v("无法被访问")]),t._v(" "),s("ul",[s("li",[s("strong",[s("code",[t._v("let")])]),t._v(" 声明的变量"),s("strong",[t._v("会产生")]),t._v("块作用域，var 不会产生块作用域")]),t._v(" "),s("li",[s("strong",[s("code",[t._v("const")])]),t._v(" 声明的常量"),s("strong",[t._v("会产生")]),t._v("块作用域")]),t._v(" "),s("li",[s("strong",[s("code",[t._v("for {}")])]),t._v(" 也是⼀个块级作⽤域.")]),t._v(" "),s("li",[t._v("不同代码块之间的变量无法相互访问")]),t._v(" "),s("li",[s("strong",[t._v("推荐使用 let 或 const")])])]),t._v(" "),s("h3",{attrs:{id:"全局作用域"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#全局作用域"}},[t._v("#")]),t._v(" 全局作用域")]),t._v(" "),s("p",[t._v("全局作用域中声明的变量，任何其它作用域都可以被访问。")]),t._v(" "),s("p",[s("strong",[t._v("<script>标签")]),t._v(" 和 "),s("strong",[t._v(".js文件")]),t._v(" 的最外层就是所谓的全局作用域，在此声明的变量在函数内部也可以被访问。")]),t._v(" "),s("ul",[s("li",[t._v("为 window 对象动态添加的属性默认也是全局的，"),s("strong",[t._v("不推荐！")])]),t._v(" "),s("li",[t._v("函数中未使用任何关键字声明的变量为全局变量，"),s("strong",[t._v("不推荐！")])]),t._v(" "),s("li",[t._v("尽可能少的声明全局变量，防止变量被污染")])]),t._v(" "),s("h2",{attrs:{id:"变量提升"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#变量提升"}},[t._v("#")]),t._v(" ⭐️变量提升")]),t._v(" "),s("p",[t._v("把所有 "),s("strong",[t._v("var")]),t._v(" 声明的变量提升到当前作用域的最前面，"),s("strong",{staticStyle:{color:"#DD5145"}},[t._v("只提升声明，不提升赋值")]),t._v("，let / const 声明的变量不存在变量提升。")]),t._v(" "),s("p",[t._v("let 和 const 特点:")]),t._v(" "),s("ul",[s("li",[t._v("不属于顶层对象 window")]),t._v(" "),s("li",[t._v("不允许重复声明")]),t._v(" "),s("li",[t._v("不存在变量提升")])]),t._v(" "),s("p",[t._v("let 和 const 区别：")]),t._v(" "),s("ul",[s("li",[t._v("let 声明的变量可以改变，值和类型都可以改变")]),t._v(" "),s("li",[t._v("const 声明的常量不可以改变，这意味着，const 一旦声明，就必须立即初始化，不能以后再赋值。")]),t._v(" "),s("li",[t._v("对于引用数据类型，const 声明的变量，里面存的不是值，而是"),s("strong",[t._v("地址")])]),t._v(" "),s("li",[s("strong",[t._v("建议数组和对象使用 const 来声明")])])]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'件'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" num "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 等价于")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" num\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'件'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// undefined 件")]),t._v("\nnum "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 变量声明会提升，但是赋值不会提升")]),t._v("\n")])])]),s("h2",{attrs:{id:"严格模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#严格模式"}},[t._v("#")]),t._v(" ⭐️严格模式")]),t._v(" "),s("p",[t._v("JavaScript 严格模式（strict mode）即在严格的条件下运行。")]),t._v(" "),s("p",[s("code",[t._v('"use strict"')]),t._v(" 指令，它不是一条语句，但是是一个字面量表达式，目的是指定代码在严格条件下执行。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"use strict"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("myFunction")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("myFunction")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    y "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.14")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Uncaught ReferenceError: y is not defined（引用错误）")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("在函数内部声明是局部作用域 (只在函数内使用严格模式)：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("x "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.14")]),t._v("       "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 不报错")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("myFunction")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("myFunction")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"use strict"')]),t._v("\n    y "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.14")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Uncaught ReferenceError: y is not defined")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"事件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#事件"}},[t._v("#")]),t._v(" ⭐️事件")]),t._v(" "),s("p",[t._v("HTML 事件是发生在 HTML 元素上的事情。")]),t._v(" "),s("p",[t._v("当在 HTML 页面中使用 JavaScript 时， JavaScript 可以触发这些事件。")]),t._v(" "),s("p",[t._v("详细见后续章节 "),s("em",[s("strong",[t._v("DOM 与 BOM")])])]),t._v(" "),s("h2",{attrs:{id:"void-关键字"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#void-关键字"}},[t._v("#")]),t._v(" ⭐️void 关键字")]),t._v(" "),s("p",[s("strong",[t._v("void")]),t._v(" 是 JavaScript 中非常重要的关键字，该操作符指定要计算一个表达式但是不返回值。")]),t._v(" "),s("p",[t._v("语法：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("func")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("javascript")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("func")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 或者")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("func")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("javascript")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("func")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("例如，")]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("a")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("href")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("javascript:void(0)"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("单击此处什么也不会发生"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("a")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("a")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("href")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("javascript:void(alert('Warning!!!'))"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("点我!显示警告信息"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("a")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("p",[s("code",[t._v('href="#"')]),t._v(" 与 "),s("code",[t._v('href="javascript:void(0)"')]),t._v(" 的区别：")]),t._v(" "),s("blockquote",[s("p",[s("strong",[t._v("#")]),t._v(" 包含了一个位置信息，默认的锚是**#top** 也就是网页的上端。")]),t._v(" "),s("p",[t._v("在页面很长的时候会使用 "),s("strong",[t._v("#")]),t._v(" 来定位页面的具体位置，格式为："),s("strong",[t._v("# + id")]),t._v("。")]),t._v(" "),s("p",[t._v("而 javascript:void(0)，仅仅表示一个死链接。")])]),t._v(" "),s("h2",{attrs:{id:"正则表达式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#正则表达式"}},[t._v("#")]),t._v(" ⭐️正则表达式")]),t._v(" "),s("p",[t._v("正则表达式（Regular Expression，regex、regexp或RE）使用单个字符串来描述、匹配一系列符合某个句法规则的字符串搜索模式。")]),t._v(" "),s("p",[t._v("搜索模式可用于文本搜索和文本替换。")]),t._v(" "),s("h3",{attrs:{id:"什么是正则表达式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是正则表达式"}},[t._v("#")]),t._v(" 什么是正则表达式")]),t._v(" "),s("ul",[s("li",[t._v("正则表达式是由一个字符序列形成的搜索模式。")]),t._v(" "),s("li",[t._v("当你在文本中搜索数据时，你可以用搜索模式来描述你要查询的内容。")]),t._v(" "),s("li",[t._v("正则表达式可以是一个简单的字符，或一个更复杂的模式。")]),t._v(" "),s("li",[t._v("正则表达式可用于所有文本搜索和文本替换的操作。")])]),t._v(" "),s("h3",{attrs:{id:"语法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#语法"}},[t._v("#")]),t._v(" 语法")]),t._v(" "),s("ol",[s("li",[s("strong",[t._v("定义")]),t._v(" 正则表达式语法")])]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" 变量名 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("正则表达式主体"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("修饰符")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("可选"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 其中 / / 是正则表达式字面量")]),t._v("\n")])])]),s("ol",{attrs:{start:"2"}},[s("li",[s("strong",[t._v("判断")]),t._v(" 是否符合规则的字符串")])]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" regObj "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token regex"}},[s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("表达式")]),s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),t._v("\nregObj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("被检测的字符串"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果正则表达式与指定的字符串匹配，返回true，否则false")]),t._v("\n")])])]),s("ol",{attrs:{start:"3"}},[s("li",[s("strong",[t._v("检索")]),t._v("（查找）符合规则的字符串")])]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("regObj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("exec")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("被检测的字符串"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果匹配成功，则返回一个数组，否则返回null")]),t._v("\n")])])]),s("h2",{attrs:{id:"元字符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#元字符"}},[t._v("#")]),t._v(" ⭐️元字符")]),t._v(" "),s("h4",{attrs:{id:"_1-边界符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-边界符"}},[t._v("#")]),t._v(" 1.边界符")]),t._v(" "),s("p",[t._v("表示位置，开头和结尾，必须用什么开头，用什么结尾")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("边界符")]),t._v(" "),s("th",[t._v("说明")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("^")]),t._v(" "),s("td",[t._v("表示匹配行首的文本（以谁开始）")])]),t._v(" "),s("tr",[s("td",[t._v("$")]),t._v(" "),s("td",[t._v("表示匹配行尾的文本（以谁结束）")])])])]),t._v(" "),s("p",[s("strong",[t._v("如果 ^ 和 $ 在一起，表示必须精确匹配")])]),t._v(" "),s("h4",{attrs:{id:"_2-量词"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-量词"}},[t._v("#")]),t._v(" 2.量词")]),t._v(" "),s("p",[t._v("表示重复次数设定某个模式出现的次数")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("量词")]),t._v(" "),s("th",[t._v("说明")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("*")]),t._v(" "),s("td",[t._v("重复0次或多次，类似 >=0")])]),t._v(" "),s("tr",[s("td",[t._v("+")]),t._v(" "),s("td",[t._v("重复1次或多次，类似 >=1")])]),t._v(" "),s("tr",[s("td",[t._v("?")]),t._v(" "),s("td",[t._v("重复0次或1次，类似 0 || 1")])]),t._v(" "),s("tr",[s("td",[t._v("{n}")]),t._v(" "),s("td",[t._v("重复n次")])]),t._v(" "),s("tr",[s("td",[t._v("{n,}")]),t._v(" "),s("td",[t._v("重复n次或多次")])]),t._v(" "),s("tr",[s("td",[t._v("{n,m}")]),t._v(" "),s("td",[t._v("重复n到m次")])])])]),t._v(" "),s("h4",{attrs:{id:"_3-字符类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-字符类"}},[t._v("#")]),t._v(" 3.字符类")]),t._v(" "),s("p",[t._v("[ ] 匹配字符集合，"),s("strong",[t._v("只能选一个")])]),t._v(" "),s("p",[t._v("[ ] 里面加上 - （连字符），表示一个范围")]),t._v(" "),s("p",[t._v("[ ] 里面加上 ^ （取反符号），要写到中括号里面")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token regex"}},[s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("[abc]")]),s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'andy'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 字符串只要包含 abc 中任意一个字符，都返回 true")]),t._v("\n")])])]),s("blockquote",[s("p",[s("strong",[t._v(".")]),t._v(" （点） 匹配除换行符之外的任何单个字符")])]),t._v(" "),s("p",[t._v("预定义：指的是 某些常见模式的简写方式")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("预定类")]),t._v(" "),s("th",[t._v("说明")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("\\d")]),t._v(" "),s("td",[t._v("匹配一个数字字符。等价于 [0-9]")])]),t._v(" "),s("tr",[s("td",[t._v("\\D")]),t._v(" "),s("td",[t._v("匹配一个非数字字符。等价于 [^ 0-9]")])]),t._v(" "),s("tr",[s("td",[t._v("\\w")]),t._v(" "),s("td",[t._v("匹配字母、数字、下划线。等价于 [A-Za-z0-9_]")])]),t._v(" "),s("tr",[s("td",[t._v("\\W")]),t._v(" "),s("td",[t._v("匹配非字母、数字、下划线。等价于 [^ A-Za-z0-9_]")])]),t._v(" "),s("tr",[s("td",[t._v("\\s")]),t._v(" "),s("td",[t._v("匹配任何空白字符，包括空格、制表符、换页符等等。等价于 [ \\f\\n\\r\\t\\v]")])]),t._v(" "),s("tr",[s("td",[t._v("\\S")]),t._v(" "),s("td",[t._v("匹配任何非空白字符。等价于 [^ \\f\\n\\r\\t\\v]")])])])]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 日期格式：/^\\d{4}-\\d{1,2}-d{1,2}$/")]),t._v("\n")])])]),s("h4",{attrs:{id:"_4-修饰符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-修饰符"}},[t._v("#")]),t._v(" 4.修饰符")]),t._v(" "),s("p",[t._v("修饰符约束正则执行的某些细节行为。")]),t._v(" "),s("p",[t._v("语法："),s("strong",[t._v("/ 表达式 / 修饰符")])]),t._v(" "),s("p",[t._v("replace（） 替换，"),s("strong",[s("code",[t._v("字符串.replace(/正则表达式/, '替换文本')")])])]),t._v(" "),s("p",[t._v("下表列出了正则表达式常用的修饰符：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("修饰符")]),t._v(" "),s("th",[t._v("含义")]),t._v(" "),s("th",[t._v("描述")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[s("strong",[t._v("i")])]),t._v(" "),s("td",[t._v("ignore - 不区分大小写")]),t._v(" "),s("td",[t._v("将匹配设置为不区分大小写，搜索时不区分大小写")])]),t._v(" "),s("tr",[s("td",[s("strong",[t._v("g")])]),t._v(" "),s("td",[t._v("global - "),s("strong",[t._v("全局匹配")])]),t._v(" "),s("td",[t._v("查找字符串中所有的匹配项")])]),t._v(" "),s("tr",[s("td",[t._v("m")]),t._v(" "),s("td",[t._v("multi line - 多行匹配")]),t._v(" "),s("td",[t._v("使边界字符 ^ 和 $ 匹配每一行的开头和结尾，"),s("br"),s("strong",[t._v("记住是多行")]),t._v("，而不是整个字符串的开头和结尾")])]),t._v(" "),s("tr",[s("td",[t._v("s")]),t._v(" "),s("td",[t._v("特殊字符圆点 . 中包含换行符 \\n")]),t._v(" "),s("td",[t._v("默认情况下的圆点 . 是匹配除换行符 \\n 之外的任何字符，"),s("br"),t._v("加上 s 修饰符之后，. 中包含换行符 \\n")])])])]),t._v(" "),s("h2",{attrs:{id:"错误提示"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#错误提示"}},[t._v("#")]),t._v(" ❌错误提示")]),t._v(" "),s("p",[s("code",[t._v("ReferenceError")]),t._v("：")]),t._v(" "),s("ul",[s("li",[t._v("当 JavaScript 无法找到您尝试访问的值的引用时，抛出引用错误")])]),t._v(" "),s("p",[s("code",[t._v("SyntaxError")]),t._v("：")]),t._v(" "),s("ul",[s("li",[t._v("当你编写了一些非有效的 JavaScript 时，会抛出语法错误，例如当你把"),s("code",[t._v("return")]),t._v("这个词写成"),s("code",[t._v("retrun")]),t._v("时")]),t._v(" "),s("li",[t._v("当 Javascript 引擎解析代码时，遇到了不符合语法规范的标记（token）或标记顺序，则会抛出 "),s("code",[t._v("SyntaxError")])])]),t._v(" "),s("p",[s("code",[t._v("TypeErrors")]),t._v("：")]),t._v(" "),s("ul",[s("li",[t._v("当值不是预期类型时，会抛出类型错误。 JavaScript 期望"),s("code",[t._v("name")]),t._v("是一个函数，我们试图调用它。 但它是一个字符串")])])])}),[],!1,null,null,null);s.default=r.exports}}]);