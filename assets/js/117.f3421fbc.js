(window.webpackJsonp=window.webpackJsonp||[]).push([[117],{633:function(t,a,_){"use strict";_.r(a);var v=_(10),e=Object(v.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"模板与配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#模板与配置"}},[t._v("#")]),t._v(" 模板与配置")]),t._v(" "),a("h2",{attrs:{id:"wxml模板语法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#wxml模板语法"}},[t._v("#")]),t._v(" WXML模板语法")]),t._v(" "),a("h3",{attrs:{id:"数据绑定"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据绑定"}},[t._v("#")]),t._v(" 数据绑定")]),t._v(" "),a("h4",{attrs:{id:"_1-数据绑定的基本原则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-数据绑定的基本原则"}},[t._v("#")]),t._v(" 1.数据绑定的基本原则")]),t._v(" "),a("ol",[a("li",[t._v("在data中定义数据")]),t._v(" "),a("li",[t._v("在WXML中使用数据")])]),t._v(" "),a("h4",{attrs:{id:"_2-在data中定义页面数据"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-在data中定义页面数据"}},[t._v("#")]),t._v(" 2.在data中定义页面数据")]),t._v(" "),a("p",[t._v("在页面对应的 .js文件中，把数据定义到data对象中即可")]),t._v(" "),a("h4",{attrs:{id:"_3-mustache语法-插值表达式-的格式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-mustache语法-插值表达式-的格式"}},[t._v("#")]),t._v(" 3.Mustache语法(插值表达式)的格式")]),t._v(" "),a("p",[t._v("把data中的数据绑定到页面中渲染，使用==Mustache语法==（双大括号）将变量包起来即可")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("<view>{{要绑定的数据名称}}</view>\n")])])]),a("h4",{attrs:{id:"_4-mustache语法的应用场景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-mustache语法的应用场景"}},[t._v("#")]),t._v(" 4.Mustache语法的应用场景")]),t._v(" "),a("ul",[a("li",[t._v("绑定内容")]),t._v(" "),a("li",[t._v("绑定属性")]),t._v(" "),a("li",[t._v("运算（三元运算、算术运算等）")])]),t._v(" "),a("p",[t._v("==动态绑定内容==")]),t._v(" "),a("p",[t._v("页面的数据如下：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("Page({\n\tdata:{\n\t\tinfo:'内容'\n\t}\n})\n")])])]),a("p",[t._v("页面的结构如下：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("<view>{{info}}</view>\n")])])]),a("p",[t._v("==动态绑定属性==")]),t._v(" "),a("p",[t._v("页面的数据如下：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('Page({\n\tdata:{\n\t\timgSrc:"路径"\n\t}\n})\n')])])]),a("p",[t._v("页面的结构如下：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('<image src="{{imgSrc}}"></image>\n')])])]),a("p",[t._v("==三元运算==")]),t._v(" "),a("p",[t._v("页面的数据如下：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("Page({\n\tdata:{\n\t\trandomNumber: Math.random()*10\t//生成10以内的随机数\n\t}\n})\n")])])]),a("p",[t._v("页面的结构如下：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("<view>{{randomNumber >= 5 ? '随机数字大于或等于5' : '随机数字小于5'}}</view>\n")])])]),a("p",[t._v("==算术运算==")]),t._v(" "),a("p",[t._v("页面的数据如下：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("Page({\n\tdata:{\n\t\trandomNumber: Math.random().toFixed(2)\t//生成一个带两位小数的随机数，例如0.34\n\t}\n})\n")])])]),a("p",[t._v("页面的结构如下：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("<view>生成100以内的随机数{{randomNumber*100}}</view>\n")])])]),a("h3",{attrs:{id:"事件绑定"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#事件绑定"}},[t._v("#")]),t._v(" 事件绑定")]),t._v(" "),a("h4",{attrs:{id:"_1-什么是事件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-什么是事件"}},[t._v("#")]),t._v(" 1.什么是事件")]),t._v(" "),a("p",[t._v("事件是==渲染层到逻辑层的通讯方式==。通过事件可以将用户在渲染层产生的行为，反馈到逻辑层进行业务的处理")]),t._v(" "),a("h4",{attrs:{id:"_2-小程序中的常用的事件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-小程序中的常用的事件"}},[t._v("#")]),t._v(" 2.小程序中的常用的事件")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("类型")]),t._v(" "),a("th",[t._v("绑定方式")]),t._v(" "),a("th",[t._v("事件描述")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("tap")]),t._v(" "),a("td",[t._v("bindtap或bind:tap")]),t._v(" "),a("td",[t._v("手指触摸后马上离开，类似于HTML中的click事件")])]),t._v(" "),a("tr",[a("td",[t._v("input")]),t._v(" "),a("td",[t._v("bindinput或bind:input")]),t._v(" "),a("td",[t._v("文本框的输入事件")])]),t._v(" "),a("tr",[a("td",[t._v("change")]),t._v(" "),a("td",[t._v("bindchange或bind:change")]),t._v(" "),a("td",[t._v("状态改变时触发")])])])]),t._v(" "),a("h4",{attrs:{id:"_3-事件对象的属性列表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-事件对象的属性列表"}},[t._v("#")]),t._v(" 3.事件对象的属性列表")]),t._v(" "),a("p",[t._v("当前事件回调触发的时候，会收到一个==事件对象event==，它的详细属性如下表所示：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("属性")]),t._v(" "),a("th",[t._v("类型")]),t._v(" "),a("th",[t._v("说明")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("type")]),t._v(" "),a("td",[t._v("String")]),t._v(" "),a("td",[t._v("事件类型")])]),t._v(" "),a("tr",[a("td",[t._v("timeStamp")]),t._v(" "),a("td",[t._v("integer")]),t._v(" "),a("td",[t._v("页面打开到触发事件所经过的毫秒数")])]),t._v(" "),a("tr",[a("td",[t._v("==target==")]),t._v(" "),a("td",[t._v("==Object==")]),t._v(" "),a("td",[t._v("==触发事件的组件的一些属性值集合==")])]),t._v(" "),a("tr",[a("td",[t._v("currentTarget")]),t._v(" "),a("td",[t._v("Object")]),t._v(" "),a("td",[t._v("当前事件的组件的一些属性值集合")])]),t._v(" "),a("tr",[a("td",[t._v("==detail==")]),t._v(" "),a("td",[t._v("==Object==")]),t._v(" "),a("td",[t._v("==额外的信息==")])]),t._v(" "),a("tr",[a("td",[t._v("touches")]),t._v(" "),a("td",[t._v("Array")]),t._v(" "),a("td",[t._v("触摸事件，当前停留在屏幕中的触摸点信息的数组")])]),t._v(" "),a("tr",[a("td",[t._v("changedTouches")]),t._v(" "),a("td",[t._v("Array")]),t._v(" "),a("td",[t._v("触摸事件，当前变换的触摸点信息的数组")])])])]),t._v(" "),a("h4",{attrs:{id:"_4-target和currenttarget的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-target和currenttarget的区别"}},[t._v("#")]),t._v(" 4.target和currentTarget的区别")]),t._v(" "),a("p",[t._v("==target== 是 ==触发该事件的源头组件==，而 ==currentTarget== 则是 ==当前事件所绑定的组件==。")]),t._v(" "),a("h4",{attrs:{id:"_5-bindtap的语法格式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-bindtap的语法格式"}},[t._v("#")]),t._v(" 5.bindtap的语法格式")]),t._v(" "),a("p",[t._v("在小程序中，不存在HTML中的onclick鼠标点击事件，而是通过==tap事件==来响应用户的触摸行为。")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("通过bindtap，可以为组件绑定tap触摸事件，语法如下：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('<button type="primary" bindtap="btnTapHandler">按钮</button>\n')])])])]),t._v(" "),a("li",[a("p",[t._v("在页面的 .js文件中定义的事件处理函数，事件参数通过形参==event==（一般==简写成e==）来接收：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("Page({\n\tbtnTapHandler(e){\t//按钮的tap事件处理函数\n\t\tconsole.log(e)\t//事件参数对象 e\n\t}\n})\n")])])])])]),t._v(" "),a("h4",{attrs:{id:"_6-在事件处理函数中为data中的数据赋值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-在事件处理函数中为data中的数据赋值"}},[t._v("#")]),t._v(" 6.在事件处理函数中为data中的数据赋值")]),t._v(" "),a("p",[t._v("通过调用 ==this.setData(dataObject)== 方法，可以给页面data中的数据重新赋值，例如：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("Page({\n\tdata:{\n\t\tcount: 0\n\t},\n\t//修改count的值\n\tchangeCount(){\n\t\tthis.setData({\n\t\t\tcount: this.data.count + 1\t//this.data.count用来访问旧的值count\n\t\t})\n\t}\n})\n")])])]),a("h4",{attrs:{id:"_7-事件传参"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-事件传参"}},[t._v("#")]),t._v(" 7.事件传参")]),t._v(" "),a("ol",[a("li",[t._v("小程序中的事件传参比较特殊，==不能在绑定事件的同时为事件处理函数传递参数==。例如，下面的代码将不能正常工作：")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('<button type="primary" bindtap="btnHandler(123)">事件传参</button>\n')])])]),a("p",[t._v("因为小程序会把bindtap的属性值，统一当作事件名称来处理，相当于要调用一个名称为btnhandler(123)的事件处理函数。")]),t._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[t._v("可以为组件提供 ==data-*== 自定义属性传参，其中 ==*代表的是参数的名字==，例如：")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('<button type="primary" bindtap="btnHandler" data-info="{{2}}">事件传参</button>\n')])])]),a("p",[t._v("最终：")]),t._v(" "),a("ul",[a("li",[t._v("==info== 会被解析为 ==参数的名字==")]),t._v(" "),a("li",[t._v("==数值2== 会被解析为 ==参数的值==")])]),t._v(" "),a("ol",{attrs:{start:"3"}},[a("li",[t._v("在事件处理函数中，通过 ==event.target.dataset.参数名== 即可获取到==具体参数的值==，例如：")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("btnHandler(event){\n\t//dataset是一个对象，包含了所有通过data-*传递过来的参数项\n\tconsole.log(event.target.dataset)\n\t//通过dataset可以访问到具体参数的值\n\tconsole.log(event.target.dataset.info)\n}\n")])])]),a("h4",{attrs:{id:"_8-bindinput语法格式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-bindinput语法格式"}},[t._v("#")]),t._v(" 8.bindinput语法格式")]),t._v(" "),a("p",[t._v("在小程序中，通过 ==input事件== 响应文本框的输入事件，语法可格式如下：")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("通过bindinput，可以为文本框绑定输入事件：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('<input bindinput="inputHandler"></input>\n')])])])]),t._v(" "),a("li",[a("p",[t._v("在页面的 .js文件中定义事件处理函数：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("inputHandler(e){\n\t//e.detail.value是变化以后，文本框最新的值\n\tconsole.log(e.detail.value)\n}\n")])])])])]),t._v(" "),a("h4",{attrs:{id:"_9-实现文本框和data之间的数据同步"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-实现文本框和data之间的数据同步"}},[t._v("#")]),t._v(" 9.实现文本框和data之间的数据同步")]),t._v(" "),a("p",[t._v("实现步骤")]),t._v(" "),a("ol",[a("li",[t._v("==定义数据==")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("Page({\n\tdata: {\n\t\tmsg: '你好'\n\t}\n})\n")])])]),a("ol",{attrs:{start:"2"}},[a("li",[t._v("==渲染结构==")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('<input value="{{msg}}" bindinput="iptHandler"></input>\n')])])]),a("ol",{attrs:{start:"3"}},[a("li",[t._v("==美化样式==")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("input{\n\tborder: 1px solid #eee;\n\tpadding: 5px;\n\tmargin: 5px;\n\tborder-radius: 3px;\n}\n")])])]),a("ol",{attrs:{start:"4"}},[a("li",[t._v("==绑定 input 事件处理函数==")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("//文本框内容改变的事件\niptHandler(e){\n\tthis.setData({\n\t\t//通过e.detail.value获取到文本框最新的值\n\t\tmsg: e.detail.value\n\t})\n}\n")])])]),a("h3",{attrs:{id:"条件渲染"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#条件渲染"}},[t._v("#")]),t._v(" 条件渲染")]),t._v(" "),a("h4",{attrs:{id:"_1-wx-if"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-wx-if"}},[t._v("#")]),t._v(" 1.wx:if")]),t._v(" "),a("p",[t._v('在小程序中，使用 ==wx:if="'+t._s(t.condition)+'"== 来判断是否需要渲染该代码块：')]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('<view wx:if="{{condition}}">True</view>\n')])])]),a("p",[t._v("也可以用 ==wx:elif== 和 ==wx:else== 来添加else判断：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('<view wx:if="{{type === 1}}">男</view>\n<view wx:elif="{{type === 2}}">女</view>\n<view wx:else>保密</view>\n')])])]),a("h4",{attrs:{id:"_2-结合-block-使用wx-if"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-结合-block-使用wx-if"}},[t._v("#")]),t._v(" 2.结合<block>使用wx:if")]),t._v(" "),a("p",[t._v("如果要==一次性控制多个组件的展示与隐藏==，可以使用一个==<block></block>==标签将多个组件包装起来，并在<block>标签上使用wx:if 控制属性，实例如下：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('<block wx:if="{{true}}">\n\t<view> view1 </view>\n\t<view> view2 </view>\n</block>\n')])])]),a("p",[t._v("==注意==：<block>==并不是一个组件==，它只是一个包裹性质的容器，==不会在页面中做任何渲染==。")]),t._v(" "),a("h4",{attrs:{id:"_3-hidden"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-hidden"}},[t._v("#")]),t._v(" 3.hidden")]),t._v(" "),a("p",[t._v('在小程序中，直接使用 ==hidden="'+t._s(t.condition)+'"== 也能控制元素的显示与隐藏：')]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('<view hidden="{{condition}}">条件为true 隐藏，条件为false 显示</view>\n')])])]),a("h4",{attrs:{id:"_4-wx-if-与-hidden的对比"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-wx-if-与-hidden的对比"}},[t._v("#")]),t._v(" 4.wx:if 与 hidden的对比")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("运行方式不同")]),t._v(" "),a("ul",[a("li",[t._v("wx:if以==动态创建和移除元素==的方式，控制元素的展示与隐藏")]),t._v(" "),a("li",[t._v("hidden以==切换样式==的方式（display:none/block;），控制元素的显示与隐藏")])])]),t._v(" "),a("li",[a("p",[t._v("使用建议")]),t._v(" "),a("ul",[a("li",[t._v("==频繁切换==时建议使用 ==hidden==")]),t._v(" "),a("li",[t._v("==控制条件复杂==时，建议使用 ==wx:if== 搭配 wx:elif、wx:else 进行展示与隐藏的切换")])])])]),t._v(" "),a("h3",{attrs:{id:"列表渲染"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#列表渲染"}},[t._v("#")]),t._v(" 列表渲染")]),t._v(" "),a("h4",{attrs:{id:"_1-wx-for"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-wx-for"}},[t._v("#")]),t._v(" 1.wx:for")]),t._v(" "),a("p",[t._v("通过 wx:for 可以根据指定的数组，循环渲染重复的组件结构，语法示例如下：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('<view wx:for="{{array}}">\n\t索引是: {{index}} 当前项是: {{item}}\n</view>\n')])])]),a("p",[t._v("默认情况下，当前循环项的 ==索引== 用 ==index== 表示；==当前循环项== 用 ==item== 表示。")]),t._v(" "),a("h4",{attrs:{id:"_2-手动指定索引和当前项的变量名"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-手动指定索引和当前项的变量名"}},[t._v("#")]),t._v(" 2.手动指定索引和当前项的变量名*")]),t._v(" "),a("p",[t._v("（了解，实际开发中太麻烦了）")]),t._v(" "),a("ul",[a("li",[t._v("使用 ==wx:for-index== 可以指定==当前循环项的索引==的变量名")]),t._v(" "),a("li",[t._v("使用 ==wx:for-item== 可以指定==当前项==的变量名")])]),t._v(" "),a("p",[t._v("示例代码如下：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('<view wx:for="{{array}}" wx:for-index="idx" wx:for-item="itemName">\n\t索引是: {{idx}} 当前项是: {{itemName}}\n</view>\n')])])]),a("h4",{attrs:{id:"_3-wx-key的使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-wx-key的使用"}},[t._v("#")]),t._v(" 3.wx:key的使用")]),t._v(" "),a("p",[t._v("类似于Vue列表渲染中的 ==:key==，小程序在实现列表渲染时，也建议为渲染出来的列表项指定唯一的key值，从而==提高渲染的效率==，示例代码如下：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("//data数据\ndata: {\n\tuserList: [\n\t\t{id: 1, name: '小红'},\n\t\t{id: 2, name: '小黄'},\n\t\t{id: 3, name: '小白'},\n\t]\n}\n\n//wxml结构\n<view wx:for=\"{{userList}}\" wx:key=\"id\">{{item.name}}</view>\n")])])]),a("h2",{attrs:{id:"wxss模板样式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#wxss模板样式"}},[t._v("#")]),t._v(" WXSS模板样式")]),t._v(" "),a("ol",[a("li",[a("strong",[t._v("什么是WXSS")])])]),t._v(" "),a("p",[t._v("WXSS（WeiXin Style Sheets）是一套==样式语言==，用于美化WXML的组件样式，类似于网页开发中的CSS")]),t._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[a("strong",[t._v("WXSS和CSS的关系")])])]),t._v(" "),a("p",[t._v("WXSS具有CSS大部分特性，同时，WXSS还对CSS进行扩充以及修改，以适应微信小程序的开发。")]),t._v(" "),a("p",[t._v("与CSS相比，WXSS扩展的特性有：")]),t._v(" "),a("ul",[a("li",[t._v("==rpx== 尺寸单位")]),t._v(" "),a("li",[t._v("==@import== 样式导入")])]),t._v(" "),a("h3",{attrs:{id:"rpx"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rpx"}},[t._v("#")]),t._v(" rpx")]),t._v(" "),a("h4",{attrs:{id:"_1-什么是-rpx-尺寸单位"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-什么是-rpx-尺寸单位"}},[t._v("#")]),t._v(" 1.什么是 rpx 尺寸单位")]),t._v(" "),a("p",[t._v("==rpx==（responsive pixel）是微信小程序独有的，用来==解决屏幕适配的尺寸单位==。")]),t._v(" "),a("h4",{attrs:{id:"_2-rpx-的实现原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-rpx-的实现原理"}},[t._v("#")]),t._v(" 2.rpx 的实现原理")]),t._v(" "),a("p",[t._v("rpx 的实现原理非常简单：鉴于不同设备屏幕大小不同，为了实现屏幕的自动适配，rpx把所有设备的屏幕，在宽度上==等分为750份==（即，==当前屏幕的总宽度为750rpx==）。")]),t._v(" "),a("ul",[a("li",[t._v("在==较小==的设备上，==1rpx所代表的宽度较小==")]),t._v(" "),a("li",[t._v("在==较大==的设备上，==1rpx所代表的宽度较大==")])]),t._v(" "),a("p",[t._v("小程序在不同设备上运行的时候，会自动把rpx的样式单位换算对应的像素单位来渲染，从而实现屏幕适配。")]),t._v(" "),a("h4",{attrs:{id:"_3-rpx-与-px-之间单位换算"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-rpx-与-px-之间单位换算"}},[t._v("#")]),t._v(" 3.rpx 与 px 之间单位换算*")]),t._v(" "),a("p",[t._v("在iPhone6上，屏幕宽度为375px，总共为750个物理像素，等分为750rpx。则：")]),t._v(" "),a("p",[t._v("​\t750rpx = 375px = 750物理像素")]),t._v(" "),a("p",[t._v("​\t==1rpx = 0.5px = 1物理像素==，即 ==1px=2rpx==")]),t._v(" "),a("p",[t._v("官方建议：开发微信小程序时，设计师可以用iPhone6作为视觉稿的标准 。")]),t._v(" "),a("p",[t._v("开发举例：在iPhone6上如果要绘制宽100px，高20px的盒子，换算成rpx单位的话，宽高分别为200rpx和40rpx。")]),t._v(" "),a("h3",{attrs:{id:"样式导入"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#样式导入"}},[t._v("#")]),t._v(" 样式导入")]),t._v(" "),a("ol",[a("li",[a("strong",[t._v("@import的语法格式")])])]),t._v(" "),a("p",[t._v("==@import== 后跟需要导入的外联样式表的==相对路径==，用 ==;== 表示语句结束。")]),t._v(" "),a("h3",{attrs:{id:"全局样式和局部样式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#全局样式和局部样式"}},[t._v("#")]),t._v(" 全局样式和局部样式")]),t._v(" "),a("ol",[a("li",[a("strong",[t._v("全局样式")])])]),t._v(" "),a("p",[t._v("定义在 ==app.wxss== 中的样式为 ==全局样式==，作用于每一个页面。")]),t._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[a("strong",[t._v("局部样式")])])]),t._v(" "),a("p",[t._v("定义在 ==页面的 .wxss== 文件中定义的样式为==局部样式==，只作用于当前页面。")]),t._v(" "),a("p",[t._v("==注意==：")]),t._v(" "),a("ul",[a("li",[t._v("当局部样式和全局样式冲突时，根据==就近原则==，局部样式会==覆盖==全局样式")]),t._v(" "),a("li",[t._v("当局部样式的==权重大于或等于==全局样式的权重时，才会覆盖全局的样式")])]),t._v(" "),a("h2",{attrs:{id:"全局配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#全局配置"}},[t._v("#")]),t._v(" 全局配置")]),t._v(" "),a("p",[a("strong",[t._v("全局配置文件及常用的配置项")])]),t._v(" "),a("p",[t._v("小程序根目录下的 ==app.json== 文件是小程序的==全局配置文件==。常用的配置项如下：")]),t._v(" "),a("ol",[a("li",[a("em",[t._v("pages")]),t._v(" "),a("ul",[a("li",[a("em",[t._v("记录当前小程序所有页面的存放路径")])])])]),t._v(" "),a("li",[a("em",[t._v("==window==")]),t._v(" "),a("ul",[a("li",[a("em",[t._v("全局配置小程序窗口的外观")])])])]),t._v(" "),a("li",[a("em",[t._v("==tabBar==")]),t._v(" "),a("ul",[a("li",[a("em",[t._v("设置小程序底部的tabBar效果")])])])]),t._v(" "),a("li",[a("em",[t._v("style")]),t._v(" "),a("ul",[a("li",[a("em",[t._v("是否启用新版的组件样式")])])])])]),t._v(" "),a("h3",{attrs:{id:"window"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#window"}},[t._v("#")]),t._v(" window")]),t._v(" "),a("h4",{attrs:{id:"_1-小程序窗口的组成部分"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-小程序窗口的组成部分"}},[t._v("#")]),t._v(" 1.小程序窗口的组成部分")]),t._v(" "),a("ul",[a("li",[a("em",[t._v("navigationBar导航栏区域")])]),t._v(" "),a("li",[a("em",[t._v("background背景区域（默认不可见，下拉才显示）")])]),t._v(" "),a("li",[a("em",[t._v("页面的主体区域用来显示wxml中的布局")])])]),t._v(" "),a("h4",{attrs:{id:"_2-了解window节点常用的配置项"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-了解window节点常用的配置项"}},[t._v("#")]),t._v(" 2.了解window节点常用的配置项")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("属性名")]),t._v(" "),a("th",[t._v("类型")]),t._v(" "),a("th",[t._v("默认值")]),t._v(" "),a("th",[t._v("说明")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("navigationBarTitleText")]),t._v(" "),a("td",[t._v("String")]),t._v(" "),a("td",[t._v("字符串")]),t._v(" "),a("td",[t._v("导航栏标题文字内容")])]),t._v(" "),a("tr",[a("td",[t._v("navigationBarBackgroundColor")]),t._v(" "),a("td",[t._v("HexColor")]),t._v(" "),a("td",[t._v("#000000")]),t._v(" "),a("td",[t._v("导航栏背景颜色，如#000000")])]),t._v(" "),a("tr",[a("td",[t._v("navigationBarTextStyle")]),t._v(" "),a("td",[t._v("String")]),t._v(" "),a("td",[t._v("white")]),t._v(" "),a("td",[t._v("导航栏标题颜色，仅支持 ==black / white==")])]),t._v(" "),a("tr",[a("td",[t._v("backgroundColor")]),t._v(" "),a("td",[t._v("HexColor")]),t._v(" "),a("td",[t._v("#ffffff")]),t._v(" "),a("td",[t._v("窗口的背景颜色")])]),t._v(" "),a("tr",[a("td",[t._v("backgroundTextStyle")]),t._v(" "),a("td",[t._v("String")]),t._v(" "),a("td",[t._v("dark")]),t._v(" "),a("td",[t._v("下拉loading的样式，仅支持 ==dark / light==")])]),t._v(" "),a("tr",[a("td",[t._v("enablePullDownRefresh")]),t._v(" "),a("td",[t._v("Boolean")]),t._v(" "),a("td",[t._v("false")]),t._v(" "),a("td",[t._v("是否全局开启下拉刷新")])]),t._v(" "),a("tr",[a("td",[t._v("onReachBottomDistance")]),t._v(" "),a("td",[t._v("Number")]),t._v(" "),a("td",[t._v("50")]),t._v(" "),a("td",[t._v("页面上拉触底事件触发时距页面底部距离，单位为px")])])])]),t._v(" "),a("h4",{attrs:{id:"_3-设置导航栏的标题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-设置导航栏的标题"}},[t._v("#")]),t._v(" 3.设置导航栏的标题")]),t._v(" "),a("p",[t._v("设置步骤：==app.json -> window -> navigationBarTitleText==")]),t._v(" "),a("h4",{attrs:{id:"_4-设置导航栏的背景色"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-设置导航栏的背景色"}},[t._v("#")]),t._v(" 4.设置导航栏的背景色")]),t._v(" "),a("p",[t._v("设置步骤：==app.json -> window -> navigationBarBackgroundColor==")]),t._v(" "),a("h4",{attrs:{id:"_5-设置导航栏的标题颜色"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-设置导航栏的标题颜色"}},[t._v("#")]),t._v(" 5. 设置导航栏的标题颜色")]),t._v(" "),a("p",[t._v("设置步骤：==app.json -> window -> navigationBarTextStyle==")]),t._v(" "),a("p",[t._v("==注意==：navigationBarTextStyle的可选值只有 black 和 white")]),t._v(" "),a("h4",{attrs:{id:"_6-全局开启下拉刷新功能"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-全局开启下拉刷新功能"}},[t._v("#")]),t._v(" 6.全局开启下拉刷新功能")]),t._v(" "),a("p",[t._v("概念：==下拉刷新==是移动端的专业名词，指的是通过手指在屏幕上的下拉滑动操作，从而==重新加载页面数据==的行为")]),t._v(" "),a("p",[t._v("设置步骤：==app.json== -> ==window== -> 把 ==enablePullDownRefresh== 的值设置为 ==true==")]),t._v(" "),a("p",[t._v("==注意==：在app.json中开启下拉刷新功能，会作用于每个小程序页面")]),t._v(" "),a("h4",{attrs:{id:"_7-设置下拉刷新时窗口的背景色"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-设置下拉刷新时窗口的背景色"}},[t._v("#")]),t._v(" 7.设置下拉刷新时窗口的背景色")]),t._v(" "),a("p",[t._v("当全局开启下拉刷新功能之后，默认的窗口背景为白色。如果自定义下拉刷新窗口背景色，")]),t._v(" "),a("p",[t._v("设置步骤：==app.json== -> ==window== -> 把 ==backgroundColor== 指定16进制的颜色值 ==#efefef==")]),t._v(" "),a("h4",{attrs:{id:"_8-设置下拉刷新时loading的样式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-设置下拉刷新时loading的样式"}},[t._v("#")]),t._v(" 8.设置下拉刷新时loading的样式")]),t._v(" "),a("p",[t._v("当全局开启下拉刷新功能之后，默认窗口的loading样式为白色，如果要更改loading样式效果，")]),t._v(" "),a("p",[t._v("设置步骤：==app.json== -> ==window== -> 把 ==backgroundTextStyle== 指定 ==dark== 值")]),t._v(" "),a("p",[t._v("==注意==：backgroundTextStyle 的可选值只有 light 和 dark")]),t._v(" "),a("h4",{attrs:{id:"_9-设置上拉触底的距离"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-设置上拉触底的距离"}},[t._v("#")]),t._v(" 9.设置上拉触底的距离")]),t._v(" "),a("p",[t._v("概念：==上拉触底==是移动端专业名词，通过手指在屏幕上的上拉滑动操作，从而==加载更多数据==的行为")]),t._v(" "),a("p",[t._v("设置步骤：==app.json== -> ==window== -> 为 ==onReachBottomDistance== 设置新数值")]),t._v(" "),a("p",[t._v("==注意==：==默认距离为50px==，如果没有特性需求，建议使用默认值即可")]),t._v(" "),a("h3",{attrs:{id:"tabbar"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tabbar"}},[t._v("#")]),t._v(" tabBar")]),t._v(" "),a("h4",{attrs:{id:"_1-什么是tabbar"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-什么是tabbar"}},[t._v("#")]),t._v(" 1.什么是tabBar")]),t._v(" "),a("p",[t._v("tabBar是移动端应用常见的页面效果，==用于实现多页面的快速切换==。小程序中通常将其分为：")]),t._v(" "),a("ul",[a("li",[t._v("顶部tabBar")]),t._v(" "),a("li",[t._v("底部tabBar")])]),t._v(" "),a("p",[t._v("注意：")]),t._v(" "),a("ul",[a("li",[t._v("tabBar中只能配置最少2个、最多5个tab页签")]),t._v(" "),a("li",[t._v("当渲染==顶部tabBar==时，==不显示icon，只显示文本==")])]),t._v(" "),a("h4",{attrs:{id:"_2-tabbar的6个组成部分"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-tabbar的6个组成部分"}},[t._v("#")]),t._v(" 2.tabBar的6个组成部分")]),t._v(" "),a("ol",[a("li",[a("em",[t._v("backgroundColor：tabBar的背景色")])]),t._v(" "),a("li",[a("em",[t._v("borderStyle：tabBar上边框的颜色")])]),t._v(" "),a("li",[a("em",[t._v("selectediconPath：选中的图片路径")])]),t._v(" "),a("li",[a("em",[t._v("iconPath：未选中的图片路径")])]),t._v(" "),a("li",[a("em",[t._v("selectedColor：tab上文字选中的颜色")])]),t._v(" "),a("li",[a("em",[t._v("Color：tab上文字的默认（未选中）的颜色")])])]),t._v(" "),a("h4",{attrs:{id:"_3-tabbar节点的配置项"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-tabbar节点的配置项"}},[t._v("#")]),t._v(" 3.tabBar节点的配置项")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("属性")]),t._v(" "),a("th",[t._v("类型")]),t._v(" "),a("th",[t._v("必填")]),t._v(" "),a("th",[t._v("默认值")]),t._v(" "),a("th",[t._v("描述")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("position")]),t._v(" "),a("td",[t._v("String")]),t._v(" "),a("td",[t._v("否")]),t._v(" "),a("td",[t._v("bottom")]),t._v(" "),a("td",[t._v("tabBar的位置，仅支持 ==bottom / top==")])]),t._v(" "),a("tr",[a("td",[t._v("borderStyle")]),t._v(" "),a("td",[t._v("String")]),t._v(" "),a("td",[t._v("否")]),t._v(" "),a("td",[t._v("black")]),t._v(" "),a("td",[t._v("tabBar上边框的颜色，仅支持 ==black / white==")])]),t._v(" "),a("tr",[a("td",[t._v("color")]),t._v(" "),a("td",[t._v("HexColor")]),t._v(" "),a("td",[t._v("否")]),t._v(" "),a("td"),t._v(" "),a("td",[t._v("tab上文字的默认（未选中）颜色")])]),t._v(" "),a("tr",[a("td",[t._v("selectedColor")]),t._v(" "),a("td",[t._v("HexColor")]),t._v(" "),a("td",[t._v("否")]),t._v(" "),a("td"),t._v(" "),a("td",[t._v("tab上的文字选中时的颜色")])]),t._v(" "),a("tr",[a("td",[t._v("backgroundColor")]),t._v(" "),a("td",[t._v("HexColor")]),t._v(" "),a("td",[t._v("否")]),t._v(" "),a("td"),t._v(" "),a("td",[t._v("tabBar的背景色")])]),t._v(" "),a("tr",[a("td",[t._v("==list==")]),t._v(" "),a("td",[t._v("==Array==")]),t._v(" "),a("td",[t._v("==是==")]),t._v(" "),a("td"),t._v(" "),a("td",[t._v("tab页签的列表，==最少2个==，==最多5个==")])])])]),t._v(" "),a("h4",{attrs:{id:"_4-每个tab项的配置选项"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-每个tab项的配置选项"}},[t._v("#")]),t._v(" 4.每个tab项的配置选项")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("属性")]),t._v(" "),a("th",[t._v("类型")]),t._v(" "),a("th",[t._v("必填")]),t._v(" "),a("th",[t._v("描述")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("==pagePath==")]),t._v(" "),a("td",[t._v("String")]),t._v(" "),a("td",[t._v("==是==")]),t._v(" "),a("td",[t._v("==页面路径，页面必须在pages中预先定义==")])]),t._v(" "),a("tr",[a("td",[t._v("==text==")]),t._v(" "),a("td",[t._v("String")]),t._v(" "),a("td",[t._v("==是==")]),t._v(" "),a("td",[t._v("==tab上显示的文字==")])]),t._v(" "),a("tr",[a("td",[t._v("iconPath")]),t._v(" "),a("td",[t._v("String")]),t._v(" "),a("td",[t._v("否")]),t._v(" "),a("td",[t._v("==未选中时==的图标路径；当postion为top时，不显示icon")])]),t._v(" "),a("tr",[a("td",[t._v("selectediconPath")]),t._v(" "),a("td",[t._v("String")]),t._v(" "),a("td",[t._v("否")]),t._v(" "),a("td",[t._v("==选中时==的图标路径；当postion为top时，不显示icon")])])])]),t._v(" "),a("h2",{attrs:{id:"页面配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#页面配置"}},[t._v("#")]),t._v(" 页面配置")]),t._v(" "),a("h3",{attrs:{id:"_1-页面配置文件的作用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-页面配置文件的作用"}},[t._v("#")]),t._v(" 1.页面配置文件的作用")]),t._v(" "),a("p",[t._v("小程序中，每个页面都有自己的 .json配置文件，用来对==当前页面==的窗口外观、页面效果等进行配置。")]),t._v(" "),a("h3",{attrs:{id:"_2-页面配置和全局配置的关系"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-页面配置和全局配置的关系"}},[t._v("#")]),t._v(" 2.页面配置和全局配置的关系")]),t._v(" "),a("p",[t._v("小程序中，app.json 中的 window 节点，可以全局配置小程序中的==每个页面的窗口表现==。")]),t._v(" "),a("p",[t._v("如果某些小程序页面==想要拥有特殊的窗口表现==，此时，“==页面级别的 .json配置文件==” 就可以实现这种需求。")]),t._v(" "),a("p",[t._v("注意：当页面配置与全局配置==冲突==时，根据==就近原则==，最终的效果==以页面配置为准==。")]),t._v(" "),a("h3",{attrs:{id:"_3-页面配置中常用的配置项"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-页面配置中常用的配置项"}},[t._v("#")]),t._v(" 3.页面配置中常用的配置项")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("属性")]),t._v(" "),a("th",[t._v("类型")]),t._v(" "),a("th",[t._v("默认值")]),t._v(" "),a("th",[t._v("描述")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("navigationBarBackgroundColor")]),t._v(" "),a("td",[t._v("HexColor")]),t._v(" "),a("td",[t._v("#000000")]),t._v(" "),a("td",[t._v("当前页面导航栏背景颜色")])]),t._v(" "),a("tr",[a("td",[t._v("navigationBarTextStyle")]),t._v(" "),a("td",[t._v("String")]),t._v(" "),a("td",[t._v("white")]),t._v(" "),a("td",[t._v("当前页面导航栏标题颜色，仅支持 ==black / white==")])]),t._v(" "),a("tr",[a("td",[t._v("navigationBarTitleText")]),t._v(" "),a("td",[t._v("String")]),t._v(" "),a("td"),t._v(" "),a("td",[t._v("当前导航栏标题文字内容")])]),t._v(" "),a("tr",[a("td",[t._v("backgroundColor")]),t._v(" "),a("td",[t._v("HexColor")]),t._v(" "),a("td",[t._v("#ffffff")]),t._v(" "),a("td",[t._v("当前页面窗口的背景颜色")])]),t._v(" "),a("tr",[a("td",[t._v("backgroundTextStyle")]),t._v(" "),a("td",[t._v("String")]),t._v(" "),a("td",[t._v("dark")]),t._v(" "),a("td",[t._v("当前页面下拉loading的样式，仅支持 ==dark / light==")])]),t._v(" "),a("tr",[a("td",[t._v("==enablePullDownRefresh==")]),t._v(" "),a("td",[t._v("Boolean")]),t._v(" "),a("td",[t._v("false")]),t._v(" "),a("td",[t._v("是否为当前页面开启下拉刷新的效果")])]),t._v(" "),a("tr",[a("td",[t._v("onReachBottomDistance")]),t._v(" "),a("td",[t._v("Number")]),t._v(" "),a("td",[t._v("50")]),t._v(" "),a("td",[t._v("页面上拉触底事件触发时距页面底部距离，单位为px")])])])]),t._v(" "),a("h2",{attrs:{id:"网络数据请求"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#网络数据请求"}},[t._v("#")]),t._v(" 网络数据请求")]),t._v(" "),a("h3",{attrs:{id:"_1-小程序中网络数据请求的限制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-小程序中网络数据请求的限制"}},[t._v("#")]),t._v(" 1.小程序中网络数据请求的限制")]),t._v(" "),a("p",[t._v("出于==安全性==方面的考虑，小程序官方对==数据接口的请求==做出了如下两个限制：")]),t._v(" "),a("ol",[a("li",[t._v("只能请求 ==HTTPS== 类型的接口")]),t._v(" "),a("li",[t._v("必须将==接口的域名==添加到==信任列表==中")])]),t._v(" "),a("h3",{attrs:{id:"_2-配置-request-合法域名"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-配置-request-合法域名"}},[t._v("#")]),t._v(" 2.配置 request 合法域名")]),t._v(" "),a("p",[t._v("需求描述：假设在自己的微信小程序中，希望请求 ==https://www.escook.cn==域名下的接口")]),t._v(" "),a("p",[t._v("配置步骤：==登陆微信小程序管理后台== -> ==开发管理== -> ==开发设置== -> ==服务器域名== -> ==修改 request 合法域名==")]),t._v(" "),a("p",[t._v("注意事项：")]),t._v(" "),a("ol",[a("li",[t._v("域名只支持 https 协议")]),t._v(" "),a("li",[t._v("域名不能使用 IP 地址或 localhost")]),t._v(" "),a("li",[t._v("域名必须经过 ICP 备案")]),t._v(" "),a("li",[t._v("服务器域名一个月内最多可申请5次修改")])]),t._v(" "),a("h3",{attrs:{id:"_3-发起-get-请求"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-发起-get-请求"}},[t._v("#")]),t._v(" 3.发起 GET 请求")]),t._v(" "),a("p",[t._v("调用微信小程序提供的 wx.request() 方法，可以发起 GET 数据请求，示例代码如下：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("wx.request({\n\turl: 'https://www.escook.cn/api/get',\t//请求的接口地址，必须基于https协议\n\tmethod: 'GET',\t//请求的方式\n\tdata:{\t\t\t//发送到服务器的数据\n\t\tname:'胡禄敬',\n\t\tage:'22'\n\t},\n\tsuccess:(res) => {\t//请求成功之后的回调函数\n\t\tconsole.log(res.data)\n\t}\n})\n")])])]),a("h3",{attrs:{id:"_4-发起-post-请求"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-发起-post-请求"}},[t._v("#")]),t._v(" 4.发起 POST 请求")]),t._v(" "),a("p",[t._v("调用微信小程序提供的 wx.request() 方法，可以发起 POST 数据请求，示例代码如下：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("wx.request({\n\turl: 'https://www.escook.cn/api/post',\t//请求的接口地址，必须基于https协议\n\tmethod: 'POST',\t//请求的方式\n\tdata:{\t\t\t//发送到服务器的数据\n\t\tname:'胡禄涛',\n\t\tage:'12'\n\t},\n\tsuccess:(res) => {\t//请求成功之后的回调函数\n\t\tconsole.log(res.data)\n\t}\n})\n")])])]),a("h3",{attrs:{id:"_5-在页面刚加载时请求数据"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-在页面刚加载时请求数据"}},[t._v("#")]),t._v(" 5.在页面刚加载时请求数据")]),t._v(" "),a("p",[t._v("在很多情况小，我们需要==在页面刚加载的时候==，==自动请求一些初始化的数据==。此时需要在页面的 ==onLoad== 事件中调用获取数据的函数，示例代码如下：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("  /**\n   * 生命周期函数--监听页面加载\n   */\n  onLoad: function (options) {\n    this.getInfo()\n    this.postInfo()\n  },\n")])])]),a("h3",{attrs:{id:"_6-跳过-request-合法域名校验"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-跳过-request-合法域名校验"}},[t._v("#")]),t._v(" 6.跳过 request 合法域名校验")]),t._v(" "),a("p",[t._v("如果后端程序员==仅仅提供了https协议的接口==、==暂时没有提供https协议接口==。")]),t._v(" "),a("p",[t._v("为了不耽误开发的进度，我们可以在微信开发者工具中，临时开启【==开发环境不校验请求域名、TLS版本及HTTPS证书==】选项，跳过 request 合法域名的校验。")]),t._v(" "),a("p",[t._v("配置步骤：==开发者工具-详情== -> ==本地设置==")]),t._v(" "),a("p",[t._v("注意：跳过 request 合法域名校验的选项，==仅限==在==开发与调试阶段==使用！")]),t._v(" "),a("h3",{attrs:{id:"_7-关于-跨域-和-ajax-的说明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-关于-跨域-和-ajax-的说明"}},[t._v("#")]),t._v(" 7.关于 跨域 和 Ajax 的说明")]),t._v(" "),a("p",[t._v("跨域问题==只存在于==基于浏览器的Web开发中。由于==小程序的宿主环境==不是浏览器，而是==微信小程序==，所以==小程序中不存在跨域的问题==。")]),t._v(" "),a("p",[t._v('Ajax技术的核心是依赖于浏览器中的 XMLHttpRequest 这个对象，由于==小程序的宿主环境是微信客户端==，所以小程序中==不能叫做== "发起Ajax请求"，而是叫做 "==发起网络数据请求=="。')])])}),[],!1,null,null,null);a.default=e.exports}}]);