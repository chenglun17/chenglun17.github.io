(window.webpackJsonp=window.webpackJsonp||[]).push([[127],{640:function(v,_,s){"use strict";s.r(_);var t=s(10),r=Object(t.a)({},(function(){var v=this,_=v._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("h1",{attrs:{id:"模块化"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#模块化"}},[v._v("#")]),v._v(" 模块化")]),v._v(" "),_("h2",{attrs:{id:"模块化介绍"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#模块化介绍"}},[v._v("#")]),v._v(" ⭐️模块化介绍")]),v._v(" "),_("ol",[_("li",[_("p",[v._v("什么是模块化与模块？")]),v._v(" "),_("ul",[_("li",[v._v("是指解决一个复杂问题时，"),_("strong",[v._v("自顶向下")]),v._v("逐层把系统划分成若干模块的过程，将一个复杂的程序文件依据一定规则拆分成多个文件的过程称之为 "),_("strong",[v._v("模块化")]),v._v("。")]),v._v(" "),_("li",[v._v("其中拆分出的 "),_("strong",[v._v("每个文件就是一个模块")]),v._v("，模块的内部数据是私有的不过模块可以暴露内部数据以便其他模块使用")])])]),v._v(" "),_("li",[_("p",[v._v("什么是模块化项目？")]),v._v(" "),_("ul",[_("li",[v._v("编码时按照模块一个一个编码的，整个项目就是一个模块化的项目")])])]),v._v(" "),_("li",[_("p",[v._v("模块化的好处")]),v._v(" "),_("ul",[_("li",[v._v("防止命名冲突")]),v._v(" "),_("li",[v._v("高复用性")]),v._v(" "),_("li",[v._v("高维护性")])])])]),v._v(" "),_("h2",{attrs:{id:"暴露数据"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#暴露数据"}},[v._v("#")]),v._v(" ⭐️暴露数据")]),v._v(" "),_("p",[v._v("模块暴露数据的两种方式：")]),v._v(" "),_("ul",[_("li",[_("code",[v._v("module.exports = value")])]),v._v(" "),_("li",[_("code",[v._v("exports.属性名 = value")])])]),v._v(" "),_("p",[v._v("注意：")]),v._v(" "),_("ul",[_("li",[_("code",[v._v("module.exports")]),v._v(" 可以暴露"),_("strong",[v._v("任意数据")])]),v._v(" "),_("li",[v._v("不能使用 "),_("code",[v._v("exports = value")]),v._v(" 的形式暴露数据")]),v._v(" "),_("li",[v._v("隐式关系："),_("code",[v._v("exports = module.exports = {}")])])]),v._v(" "),_("h2",{attrs:{id:"导入-引入-模块"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#导入-引入-模块"}},[v._v("#")]),v._v(" ⭐️导入（引入）模块")]),v._v(" "),_("p",[v._v("Node.js 中模块的分类，根据模块来源的不同，将模块分为了 3 大类：")]),v._v(" "),_("ul",[_("li",[_("strong",[v._v("内置模块")]),v._v("（内置模块是由 Node.js 官方提供的，例如 fs、path、http 等）")]),v._v(" "),_("li",[_("strong",[v._v("自定义模块")]),v._v("（用户创建的每个 .js 文件，都是自定义模块）")]),v._v(" "),_("li",[_("strong",[v._v("第三方模块")]),v._v("（由第三方开发出来的模块，使用前需要先下载）")])]),v._v(" "),_("p",[v._v("在模块中使用 "),_("strong",[v._v("require")]),v._v(" 传入文件路径即可引入文件：")]),v._v(" "),_("div",{staticClass:"language-javascript extra-class"},[_("pre",{pre:!0,attrs:{class:"language-javascript"}},[_("code",[_("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("const")]),v._v(" demo "),_("span",{pre:!0,attrs:{class:"token operator"}},[v._v("=")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token function"}},[v._v("require")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("(")]),_("span",{pre:!0,attrs:{class:"token string"}},[v._v("'./me.js'")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(")")]),v._v("\n")])])]),_("p",[_("strong",[v._v("require 使用的一些注意事项：")])]),v._v(" "),_("ol",[_("li",[_("p",[v._v("对于自己创建的模块，导入时路径建议写 "),_("strong",[v._v("相对路径")]),v._v("，且不能省略 "),_("strong",[v._v("./")]),v._v(" 和 "),_("strong",[v._v("../")])])]),v._v(" "),_("li",[_("p",[_("strong",[v._v("js")]),v._v(" 和 "),_("strong",[v._v("json")]),v._v(" 文件导入时可以不用写后缀，c/c++ 编写的 node 扩展文件也可以不用写后缀")])]),v._v(" "),_("li",[_("p",[v._v("如果导入其他类型的文件，会以 "),_("strong",[v._v("js")]),v._v("文件类型进行处理")])]),v._v(" "),_("li",[_("p",[v._v("同名文件且没有写后缀，优先导入 js文件")])]),v._v(" "),_("li",[_("p",[v._v("如果导入路径是一个文件夹，则首先检测文件夹下 "),_("strong",[v._v("package.json")]),v._v(" 文件中的 "),_("strong",[v._v("main属性")]),v._v("对应的文件，"),_("br"),v._v("如果 main属性不存在，或 package.json 不存在，则会检测文件夹下的 "),_("strong",[v._v("index.js")]),v._v(" 和 "),_("strong",[v._v("index.json")]),v._v(" 文件，如果还是没有找到，就会报错")])]),v._v(" "),_("li",[_("p",[v._v("导入 node.js "),_("strong",[v._v("内置模块")]),v._v("时，直接 require 模块的名字即可，无需加 "),_("strong",[v._v("./")]),v._v(" 和 "),_("strong",[v._v("../")])])])]),v._v(" "),_("p",[v._v("导出模块的时候："),_("strong",[v._v("require 的返回结果")]),v._v(" 是目标模块中 "),_("strong",[v._v("module.exports 的值")]),v._v("，并不是 exports 的值")]),v._v(" "),_("h2",{attrs:{id:"commonjs-规范"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#commonjs-规范"}},[v._v("#")]),v._v(" ⭐️CommonJS 规范")]),v._v(" "),_("p",[_("strong",[v._v("module.exports")]),v._v("、"),_("strong",[v._v("exports")]),v._v(" 以及 "),_("strong",[v._v("require")]),v._v(" 这些都是 "),_("strong",[v._v("CommonJS 模块化规范")]),v._v("的内容，"),_("br"),v._v("而 Node.js 是实现了 CommonJS 模块化规范，二者关系类似 JavaScript 与 ECMAScript")]),v._v(" "),_("p",[v._v("CommonJS 规定了模块的特性和各模块之间如何相互依赖：")]),v._v(" "),_("ul",[_("li",[v._v("每个模块内部，module 变量代表当前模块")]),v._v(" "),_("li",[v._v("module 变量是一个对象，它的 exports 属性（即 module.exports）是对外的接口")]),v._v(" "),_("li",[v._v("加载某个模块，其实是加载该模块的 module.exports 属性。"),_("strong",[v._v("require() 方法用于加载模块")])])])])}),[],!1,null,null,null);_.default=r.exports}}]);