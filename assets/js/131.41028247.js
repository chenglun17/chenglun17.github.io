(window.webpackJsonp=window.webpackJsonp||[]).push([[131],{644:function(t,a,s){"use strict";s.r(a);var v=s(10),r=Object(v.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"path-模块"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#path-模块"}},[t._v("#")]),t._v(" path 模块")]),t._v(" "),a("p",[t._v("path 模块是 Node.js 官方提供的、用来处理路径的模块。")]),t._v(" "),a("p",[t._v("如果要在 JavaScript 代码中，使用 path 模块来处理路径，则需要使用如下的方式先导入它")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" path "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'path'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("提供一系列的方法和属性，用来满足对路径的处理需求：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("API")]),t._v(" "),a("th",[t._v("说明")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[a("strong",[t._v("path.resolve")])]),t._v(" "),a("td",[a("strong",[t._v("拼接规范的绝对路径")])])]),t._v(" "),a("tr",[a("td",[t._v("path.join(...paths)")]),t._v(" "),a("td",[t._v("可以把多个路径片段拼接")])]),t._v(" "),a("tr",[a("td",[t._v("path.sep")]),t._v(" "),a("td",[t._v("获取操作系统的路径分隔符")])]),t._v(" "),a("tr",[a("td",[t._v("path.parse")]),t._v(" "),a("td",[t._v("解析路径并返回对象")])]),t._v(" "),a("tr",[a("td",[t._v("path.basename")]),t._v(" "),a("td",[t._v("获取路径的基础名称")])]),t._v(" "),a("tr",[a("td",[t._v("path.dirname")]),t._v(" "),a("td",[t._v("获取路径的目录名")])]),t._v(" "),a("tr",[a("td",[t._v("path.extname")]),t._v(" "),a("td",[t._v("获得路径的扩展名")])])])])])}),[],!1,null,null,null);a.default=r.exports}}]);