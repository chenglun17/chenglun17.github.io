(window.webpackJsonp=window.webpackJsonp||[]).push([[51],{444:function(t,e,s){t.exports=s.p+"assets/img/web_architecture.60a0258a.jpg"},642:function(t,e,s){"use strict";s.r(e);var n=s(10),a=Object(n.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"http-模块"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#http-模块"}},[t._v("#")]),t._v(" http 模块")]),t._v(" "),e("h2",{attrs:{id:"基本概念"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#基本概念"}},[t._v("#")]),t._v(" 基本概念")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://nodejs.cn/api/http.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("http 模块"),e("OutboundLink")],1),t._v("是 Node.js 官方提供的、用来创建 web 服务器的模块。")]),t._v(" "),e("p",[t._v("通过 http 模块提供的 "),e("code",[t._v("http.createServer()")]),t._v(" 方法，就可以把一台普通的电脑，变成一台 Web 服务器，从而对外提供 Web 资源服务。")]),t._v(" "),e("h3",{attrs:{id:"什么是-web-服务器"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#什么是-web-服务器"}},[t._v("#")]),t._v(" 什么是 Web 服务器？")]),t._v(" "),e("p",[t._v("Web服务器一般指网站服务器，是指驻留于因特网上某种类型计算机的程序，Web服务器的基本功能就是提供Web信息浏览服务。它只需支持HTTP协议、HTML文档格式及URL，与客户端的网络浏览器配合。")]),t._v(" "),e("p",[t._v("大多数 web 服务器都支持服务端的脚本语言（php、python、ruby等），并通过脚本语言从数据库获取数据，将结果返回给客户端。")]),t._v(" "),e("p",[t._v("目前最主流的三个Web服务器是 Apache、Nginx、IIS。")]),t._v(" "),e("h3",{attrs:{id:"web-应用架构"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#web-应用架构"}},[t._v("#")]),t._v(" Web 应用架构")]),t._v(" "),e("p",[e("img",{attrs:{src:s(444),alt:"Web 应用架构"}})]),t._v(" "),e("ul",[e("li",[e("strong",[t._v("Client")]),t._v(" - 客户端，一般指浏览器，浏览器可以通过 HTTP 协议向服务器请求数据。")]),t._v(" "),e("li",[e("strong",[t._v("Server")]),t._v(" - 服务端，一般指 Web 服务器，可以接收客户端请求，并向客户端发送响应数据。")]),t._v(" "),e("li",[e("strong",[t._v("Business")]),t._v(" - 业务层， 通过 Web 服务器处理应用程序，如与数据库交互，逻辑运算，调用外部程序等。")]),t._v(" "),e("li",[e("strong",[t._v("Data")]),t._v(" - 数据层，一般由数据库组成。")])]),t._v(" "),e("h2",{attrs:{id:"基本使用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#基本使用"}},[t._v("#")]),t._v(" 基本使用")]),t._v(" "),e("p",[e("strong",[t._v("HTTP 模块提供了 5 个类：")])]),t._v(" "),e("ul",[e("li",[t._v("http.Agent：创建全局实例，以管理 HTTP 客户端连接的持久性和复用，")]),t._v(" "),e("li",[t._v("http.ClientRequest：当 http.request() 或 http.get() 被调用时，会创建 http.ClientRequest 对象。")]),t._v(" "),e("li",[t._v("http.Server：当使用 http.createServer() 创建新的服务器时，通常会实例化并返回此类。")]),t._v(" "),e("li",[t._v("http.ServerResponse")]),t._v(" "),e("li",[t._v("http.IncomingMessage：http.serverRqueste()")])]),t._v(" "),e("h2",{attrs:{id:"http-报文"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#http-报文"}},[t._v("#")]),t._v(" HTTP 报文")]),t._v(" "),e("p",[t._v("HTTP（HyperText Transport Protocol）超文本传输协议，协议详细规定了浏览器与万维网服务器之间互相通信的规则。")]),t._v(" "),e("p",[t._v("HTTP请求分为三部分："),e("strong",[t._v("请求行")]),t._v(" + "),e("strong",[t._v("请求头")]),t._v(" + "),e("strong",[t._v("请求体")])]),t._v(" "),e("h3",{attrs:{id:"请求报文"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#请求报文"}},[t._v("#")]),t._v(" 请求报文")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("// 请求行\nPOST /s?ie=utf-8 HTTP/1.1\n\n// 请求头\nHost: atguigu.com\nCookie: name=guigu\nContent-type: application/x-www-form-urlencoded\nUser-Agent: chrome 83\n......\n// 空行\n\n// 请求体，[GET请求，则可以为空]，POST请求，可以不为空\nusername=admin&password=admin\n")])])]),e("p",[e("strong",[t._v("常见的请求头：")])]),t._v(" "),e("p",[t._v("格式：【请求头名: 值】")]),t._v(" "),e("ul",[e("li",[e("p",[e("code",[t._v("Accept")]),t._v("：浏览器接收的数据类型，例如 text/html,application/json,image/webp")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("Accpet-Encoding")]),t._v("：接收的压缩方式，例如 gzip, deflate")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("Accept-Language")]),t._v("：接收的语言格式，例如 zh-CN")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("Connection")]),t._v("：连接的设置 keep-alive（持久连接）；close")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("Cookie")]),t._v("：  服务器发送到用户浏览器并保存在本地的一小块数据，浏览器会存储 cookie 并在下次向同一服务器再发起请求时携带并发送到服务器上，例如登录后的令牌token等")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("Cache-Control")]),t._v("：缓存控制 max-age = 0（没有缓存）")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("Content-Type")]),t._v("：请求提交的内容类型，一般只有POST提交时才需要设置，例如文件上传，表单提交等")]),t._v(" "),e("p",[t._v("用来指定不同格式的请求格式响应信息俗称 MIME 媒体类型，常见的取值为：")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("text/html")]),t._v(" ：HTML格式，"),e("code",[t._v("text/plain")]),t._v("：纯文本格式，"),e("code",[t._v("text/xml")]),t._v("： XML格式")]),t._v(" "),e("li",[e("code",[t._v("image/gif")]),t._v("：gif图片格式，"),e("code",[t._v("image/jpeg")]),t._v("：jpg图片格式，"),e("code",[t._v("image/png")]),t._v("：png图片格式")]),t._v(" "),e("li",[e("code",[t._v("application/json")]),t._v("：JSON数据格式，"),e("code",[t._v("application/pdf")]),t._v("：pdf格式")]),t._v(" "),e("li",[e("code",[t._v("application/octet-stream")]),t._v("：二进制流数据，一般是文件下载")]),t._v(" "),e("li",[e("code",[t._v("application/x-www-form-urlencoded")]),t._v("：form表单默认的提交数据的格式，会编码成key-value格式")]),t._v(" "),e("li",[e("code",[t._v("multipart/form-data")]),t._v("： 表单中需要上传文件的文件格式类型")])])]),t._v(" "),e("li",[e("p",[e("code",[t._v("Host")]),t._v("：服务器的域名（主机）")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("Origin")]),t._v("：告诉服务器请求从哪里发起的，仅包括协议和域名")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("Referer")]),t._v("：告诉服务器请求的原始资源的URI，其用于所有类型的请求，并且包括：协议+域名+查询参数； 很多抢购服务会用这个做限制，必须通过某个入来进来才有效")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("User-Agent")]),t._v("：服务器通过这个请求头判断用户的软件的应用类型、操作系统、软件开发商以及版本号、浏览器内核信息等； 风控系统、反作弊系统、反爬虫系统等基本会采集这类信息做参考")])])]),t._v(" "),e("h3",{attrs:{id:"响应报文"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#响应报文"}},[t._v("#")]),t._v(" 响应报文")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("// 请求行\nHTTP/1.1 200 OK\n\n// 请求头\nContent-type: text/html;charset=utf-8\nContent-length: 2048\nContent-encoding: gzip\n......\n// 空行\n\n// 请求体\n<html>\n\t<head></head>\n\t<body>\n\t\t<h1>你好啊<h1>\n\t</body>\n</html>\n")])])]),e("p",[e("strong",[t._v("常见的响应头：")])]),t._v(" "),e("p",[t._v("格式：【响应头名: 值】")]),t._v(" "),e("ul",[e("li",[e("p",[e("code",[t._v("Allow")]),t._v("：服务器支持哪些请求方法")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("Access-Control-Allow-Origin")]),t._v("：跨域请求配置，定哪些站点可以参与跨站资源共享")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("Access-Control-Allow-Methods")]),t._v("：允许哪些方法来访问")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("Connection")]),t._v("：连接的设置 keep-alive（持久连接）")]),t._v(" "),e("p",[t._v("告诉客户端服务器的tcp连接也是一个长连接，客户端可以继续使用这个tcp连接发送http请求")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("Content-Length")]),t._v("：响应体的字节长度")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("Content-Type")]),t._v("：响应体的MIME类型，例如"),e("code",[t._v("'Content-Type'：'text/html;charset=UTF-8'")])])]),t._v(" "),e("li",[e("p",[e("code",[t._v("Content-Encoding")]),t._v("：告诉客户端，服务端发送的资源使用的编码类型，例如 gzip")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("Cache-Control")]),t._v("：HTTP 缓存会存储与请求关联的响应，并将存储的响应复用于后续请求")]),t._v(" "),e("ul",[e("li",[t._v("默认为 "),e("code",[t._v("private")]),t._v("，响应只能作为私有的缓存，不能再用户间共享")]),t._v(" "),e("li",[e("code",[t._v("public")]),t._v("，浏览器和缓存服务器都可以缓存页面信息")]),t._v(" "),e("li",[e("code",[t._v("max-age = 10")]),t._v("，通知服务器10s内不再请求服务器，自己从缓冲区中刷新")]),t._v(" "),e("li",[e("code",[t._v("no-cache")]),t._v("，浏览器和服务器都不应该缓存页面信息")]),t._v(" "),e("li",[e("code",[t._v("no-store")]),t._v("，请求和响应的信息都不应该存储在对方的磁盘系统中")])])]),t._v(" "),e("li",[e("p",[e("code",[t._v("Date")]),t._v("：设置消息发送的日期和时间，例如 "),e("code",[t._v("'Date': Tue, 03 Apr 2018 03:52:28 GMT")])]),t._v(" "),e("p",[t._v("GMT是格林尼治所在地的标准时间")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("Expires")]),t._v("：设置响应体的过期时间（GMT时间），使用明确的时间而不是通过指定经过的时间来指定缓存的生命周期")]),t._v(" "),e("p",[t._v("如果 "),e("code",[t._v("Expires")]),t._v(" 和 "),e("code",[t._v("Cache-Control: max-age")]),t._v(" 都可用，则 "),e("code",[t._v("max-age")]),t._v(" 定义为首选，用于指定经过的时间")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("Location")]),t._v("：表示客户应当到哪里去获取资源，一般同时设置状态代码为3xx")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("Refresh")]),t._v("：用于重定向，或当一个新的资源被创建时")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("Server")]),t._v("：表示服务器和相对应的版本，只是告诉客户端服务器信息")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("Transfer-Encoding：chunked")]),t._v("，表示服务器发送的资源的方式是分块发送的")]),t._v(" "),e("p",[t._v("输出的内容长度不能确定，静态网页一般没有，基本出现在动态网页里面")]),t._v(" "),e("p",[t._v("每一块都是独立的，独立的块都能标识自己的长度，最后一块长度为0，当客户端读到长度为0块时，说明确定资源已经传输完毕")])]),t._v(" "),e("li")]),t._v(" "),e("h2",{attrs:{id:"使用-node-创建-web-服务器"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用-node-创建-web-服务器"}},[t._v("#")]),t._v(" 使用 Node 创建 Web 服务器")]),t._v(" "),e("p",[t._v("Node.js 提供了 http 模块，主要用于搭建 HTTP 服务端和客户端，使用 HTTP 服务器或客户端功能必须调用 http 模块，代码如下：")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1.导入 http 模块")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" http "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'http'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2.创建 Web 服务器")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" server "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" http"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("createServer")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 3.为服务器实例绑定 request 事件，监听客户端的请求")]),t._v("\nserver"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'request'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("req"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" res")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Someone visit our web server.'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 设置 Content-Type 响应头，解决中文乱码的问题")]),t._v("\n    res"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("setHeader")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Content-Type'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'text/html; charset=utf-8'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// res.end() 将内容响应给客户端")]),t._v("\n    res"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("end")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'你好'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 浣犲ソ")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 4.启动服务器")]),t._v("\nserver"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("listen")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("3000")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'server running at http://127.0.0.1:3000'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("p",[e("strong",[t._v("request 请求对象")])]),t._v(" "),e("p",[t._v("只要服务器接收到了客户端的请求，就会调用通过 server.on() 为服务器绑定的 request 事件处理函数。")]),t._v(" "),e("ul",[e("li",[t._v("req.url，获取客户端请求的 URL 地址")]),t._v(" "),e("li",[t._v("req.method，获取客户端请求的 method 类型")]),t._v(" "),e("li",[t._v("req.headers，获取客户端HTTP请求的请求头")])]),t._v(" "),e("p",[e("strong",[t._v("response 响应对象")])]),t._v(" "),e("p",[t._v("在服务器的 request 事件处理函数中，如果想访问与服务器相关的"),e("strong",[t._v("数据")]),t._v("或"),e("strong",[t._v("属性")]),t._v("，可以使用如下的方式")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("res.statusCode = 200;")]),t._v("，设置HTTP状态码")]),t._v(" "),e("li",[e("code",[t._v("res.statusMessage = 'OK'")]),t._v("，设置HTTP状态描述信息")]),t._v(" "),e("li",[e("code",[t._v("res.setHeader('头名', '头值')")]),t._v("，设置响应头")]),t._v(" "),e("li",[e("code",[t._v("res.write('响应体')")]),t._v("，设置响应体")]),t._v(" "),e("li",[e("code",[t._v("res.end()")]),t._v("，将内容响应给客户端，"),e("strong",{staticStyle:{color:"#DD5145"}},[t._v("请求必须要有end。有且只有一个")]),t._v("。")])]),t._v(" "),e("h2",{attrs:{id:"使用-node-创建-web-客户端"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用-node-创建-web-客户端"}},[t._v("#")]),t._v(" 使用 Node 创建 Web 客户端")]),t._v(" "),e("p",[t._v("Node 创建 Web 客户端需要引入 http 模块，创建 client.js 文件，代码如下所示：")]),t._v(" "),e("h2",{attrs:{id:"解决响应内容中文乱码"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#解决响应内容中文乱码"}},[t._v("#")]),t._v(" 解决响应内容中文乱码")]),t._v(" "),e("p",[t._v("响应内容中文乱码的解决方法：")]),t._v(" "),e("div",{staticClass:"language-javascript extra-class"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[t._v("response"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("setHeader")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Content-Type'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'text/html; charset=utf-8'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("p",[t._v("HTTP协议的默认端口为 80，HTTPS协议的默认端口为443，HTTP服务开发常用端口 3000、8080、8090、9000等")]),t._v(" "),e("h2",{attrs:{id:"参考"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[t._v("#")]),t._v(" 参考")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/HTTP",target:"_blank",rel:"noopener noreferrer"}},[t._v("MDN 文档"),e("OutboundLink")],1),t._v("、"),e("a",{attrs:{href:"https://blog.csdn.net/m0_46615524/article/details/126262714",target:"_blank",rel:"noopener noreferrer"}},[t._v("参考文章"),e("OutboundLink")],1),t._v("、"),e("a",{attrs:{href:"https://blog.csdn.net/weixin_44827418/article/details/119494952",target:"_blank",rel:"noopener noreferrer"}},[t._v("参考文章"),e("OutboundLink")],1),t._v("、"),e("a",{attrs:{href:"https://blog.csdn.net/weixin_44018458/article/details/128602152",target:"_blank",rel:"noopener noreferrer"}},[t._v("参考文章"),e("OutboundLink")],1),t._v("、"),e("a",{attrs:{href:"https://blog.csdn.net/u012206617/article/details/125971280",target:"_blank",rel:"noopener noreferrer"}},[t._v("参考文章"),e("OutboundLink")],1),t._v("、"),e("a",{attrs:{href:"https://blog.csdn.net/hannah2233/article/details/125911821",target:"_blank",rel:"noopener noreferrer"}},[t._v("参考文章"),e("OutboundLink")],1)])])}),[],!1,null,null,null);e.default=a.exports}}]);