(window.webpackJsonp=window.webpackJsonp||[]).push([[53],{447:function(t,s,a){t.exports=a.p+"assets/img/image-20230621203757841.b135aaff.png"},654:function(t,s,a){"use strict";a.r(s);var e=a(10),p=Object(e.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"typescript-简介"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#typescript-简介"}},[t._v("#")]),t._v(" TypeScript 简介")]),t._v(" "),s("h2",{attrs:{id:"什么是-typescript"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是-typescript"}},[t._v("#")]),t._v(" 什么是 TypeScript")]),t._v(" "),s("blockquote",[s("p",[t._v("Typed JavaScript at Any Scale.")]),t._v(" "),s("p",[t._v("添加了类型系统的 JavaScript，适用于任何规模的项目。")])]),t._v(" "),s("p",[t._v("以上描述是官网对于 TypeScript 的定义。")]),t._v(" "),s("p",[t._v("它强调了 TypeScript 的两个最重要的特性——类型系统、适用于任何规模。")]),t._v(" "),s("p",[s("img",{attrs:{src:a(447),alt:""}})]),t._v(" "),s("h2",{attrs:{id:"typescript-的特性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#typescript-的特性"}},[t._v("#")]),t._v(" TypeScript 的特性")]),t._v(" "),s("h3",{attrs:{id:"类型系统"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#类型系统"}},[t._v("#")]),t._v(" 类型系统")]),t._v(" "),s("p",[t._v("从 TypeScript 的名字就可以看出来，「类型」是其最核心的特性。")]),t._v(" "),s("p",[t._v("我们知道，JavaScript 是一门非常灵活的编程语言：")]),t._v(" "),s("ul",[s("li",[t._v("它没有类型约束，一个变量可能初始化时是字符串，过一会儿又被赋值为数字。")]),t._v(" "),s("li",[t._v("由于隐式类型转换的存在，有的变量的类型很难在运行前就确定。")]),t._v(" "),s("li",[t._v("基于原型的面向对象编程，使得原型上的属性或方法可以在运行时被修改。")]),t._v(" "),s("li",[t._v("函数是 JavaScript 中的一等公民，可以赋值给变量，也可以当作参数或返回值。")])]),t._v(" "),s("p",[t._v("而 TypeScript 的类型系统，在很大程度上弥补了 JavaScript 的缺点。")]),t._v(" "),s("h2",{attrs:{id:"安装-typescript"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安装-typescript"}},[t._v("#")]),t._v(" 安装 TypeScript")]),t._v(" "),s("p",[t._v("TypeScript 的命令行工具安装方法如下：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-g")]),t._v(" typescript\n")])])]),s("p",[t._v("以上命令会在全局环境下安装 "),s("code",[t._v("tsc")]),t._v(" 命令，安装完成之后，我们就可以在任何地方执行 "),s("code",[t._v("tsc")]),t._v(" 命令了。")]),t._v(" "),s("p",[t._v("编译一个 TypeScript 文件很简单：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("tsc hello.ts\n")])])]),s("p",[t._v("我们约定使用 TypeScript 编写的文件以 "),s("code",[t._v(".ts")]),t._v(" 为后缀，用 TypeScript 编写 React 时，以 "),s("code",[t._v(".tsx")]),t._v(" 为后缀。")]),t._v(" "),s("h2",{attrs:{id:"hello-typescript"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#hello-typescript"}},[t._v("#")]),t._v(" Hello TypeScript")]),t._v(" "),s("p",[t._v("创建"),s("code",[t._v("hello.ts")]),t._v("文件，编写如下代码：")]),t._v(" "),s("div",{staticClass:"language-typescript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-typescript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sayHello")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("msg"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Hello '")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" msg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" msg "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'TypeScript'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("console")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sayHello")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("msg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("然后执行")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("tsc hello.ts\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 或自动编译")]),t._v("\ntsc hello.ts "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-w")]),t._v("\n")])])]),s("p",[t._v("这时候会生成一个编译好的文件 "),s("code",[t._v("hello.js")]),t._v("：")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sayHello")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("msg")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Hello '")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" msg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" msg "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'TypeScript'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sayHello")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("msg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("在 TypeScript 中，我们使用 "),s("code",[t._v(":")]),t._v(" 指定变量的类型，"),s("code",[t._v(":")]),t._v(" 的前后有没有空格都可以。")]),t._v(" "),s("p",[t._v("上述例子中，我们用 "),s("code",[t._v(":")]),t._v(" 指定 "),s("code",[t._v("msg")]),t._v(" 参数类型为 "),s("code",[t._v("string")]),t._v("。但是编译为 js 之后，并没有什么检查的代码被插入进来。")]),t._v(" "),s("p",[t._v("这是因为 "),s("strong",[t._v("TypeScript 只会在编译时对类型进行静态检查，如果发现有错误，编译的时候就会报错")]),t._v("。而在运行时，与普通的 JavaScript 文件一样，不会对类型进行检查。")])])}),[],!1,null,null,null);s.default=p.exports}}]);